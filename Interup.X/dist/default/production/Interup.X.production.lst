

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Oct 02 00:20:09 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.42
    15                           ; Generated 13/04/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TMR0	set	4054
    49  0000                     _T0CON	set	4053
    50  0000                     _TRISC	set	3988
    51  0000                     _TRISD	set	3989
    52  0000                     _TRISB	set	3987
    53  0000                     _INTCON	set	4082
    54  0000                     _ADCON1	set	4033
    55  0000                     _OSCCON	set	4051
    56  0000                     _TMR0H	set	4055
    57  0000                     _PORTD	set	3971
    58  0000                     _TMR0L	set	4054
    59  0000                     _PORTC	set	3970
    60  0000                     _RB7	set	31759
    61  0000                     _RB6	set	31758
    62  0000                     _INT0IF	set	32657
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  000110                     __pcinit:
    68                           	opt stack 0
    69  000110                     start_initialization:
    70                           	opt stack 0
    71  000110                     __initialization:
    72                           	opt stack 0
    73  000110                     end_of_initialization:
    74                           	opt stack 0
    75  000110                     __end_of__initialization:
    76                           	opt stack 0
    77  000110  9013               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    78  000112  9213               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    79  000114  0100               	movlb	0
    80  000116  EF59  F000         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMRAM
    83  000001                     __pcstackCOMRAM:
    84                           	opt stack 0
    85  000001                     ??_miinterrupt:
    86  000001                     
    87                           ; 1 bytes @ 0x0
    88  000001                     	ds	16
    89  000011                     ??_main:
    90                           
    91                           ; 1 bytes @ 0x10
    92  000011                     	ds	2
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 14 in file "interup.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   113 ;;      Params:         0       0       0       0       0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0
   115 ;;      Temps:          2       0       0       0       0       0       0       0       0
   116 ;;      Totals:         2       0       0       0       0       0       0       0       0
   117 ;;Total ram usage:        2 bytes
   118 ;; Hardware stack levels required when called:    1
   119 ;; This function calls:
   120 ;;		Nothing
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127  0000B2                     __ptext0:
   128                           	opt stack 0
   129  0000B2                     _main:
   130                           	opt stack 30
   131                           
   132                           ;interup.c: 15: OSCCON= 0b01110010;
   133                           
   134                           ;incstack = 0
   135  0000B2  0E72               	movlw	114
   136  0000B4  6ED3               	movwf	4051,c	;volatile
   137                           
   138                           ;interup.c: 16: ADCON1= 255;
   139  0000B6  68C1               	setf	4033,c	;volatile
   140                           
   141                           ;interup.c: 17: INTCON= 0b11010000;
   142  0000B8  0ED0               	movlw	208
   143  0000BA  6EF2               	movwf	intcon,c	;volatile
   144                           
   145                           ;interup.c: 18: TRISB=0x0F;
   146  0000BC  0E0F               	movlw	15
   147  0000BE  6E93               	movwf	3987,c	;volatile
   148                           
   149                           ;interup.c: 19: TRISD=0;
   150  0000C0  0E00               	movlw	0
   151  0000C2  6E95               	movwf	3989,c	;volatile
   152                           
   153                           ;interup.c: 20: TRISC=0;
   154  0000C4  0E00               	movlw	0
   155  0000C6  6E94               	movwf	3988,c	;volatile
   156  0000C8                     l682:
   157                           
   158                           ;interup.c: 22: if(RB6==0){
   159  0000C8  BC81               	btfsc	3969,6,c	;volatile
   160  0000CA  D007               	goto	l688
   161                           
   162                           ;interup.c: 23: RB6=1;
   163  0000CC  8C81               	bsf	3969,6,c	;volatile
   164                           
   165                           ;interup.c: 24: T0CON= 0b10000111;
   166  0000CE  0E87               	movlw	135
   167  0000D0  6ED5               	movwf	4053,c	;volatile
   168                           
   169                           ;interup.c: 25: TMR0=0;
   170  0000D2  0E00               	movlw	0
   171  0000D4  6ED7               	movwf	4055,c	;volatile
   172  0000D6  0E00               	movlw	0
   173  0000D8  6ED6               	movwf	4054,c	;volatile
   174  0000DA                     l688:
   175                           
   176                           ;interup.c: 26: }
   177                           ;interup.c: 29: RB7=1;
   178  0000DA  8E81               	bsf	3969,7,c	;volatile
   179                           
   180                           ;interup.c: 30: _delay((unsigned long)((100)*(8000000/4000.0)));
   181  0000DC  0E02               	movlw	2
   182  0000DE  6E12               	movwf	(??_main+1)& (0+255),c
   183  0000E0  0E04               	movlw	4
   184  0000E2  6E11               	movwf	??_main& (0+255),c
   185  0000E4  0EBA               	movlw	186
   186  0000E6                     u27:
   187  0000E6  2EE8               	decfsz	wreg,f,c
   188  0000E8  D7FE               	bra	u27
   189  0000EA  2E11               	decfsz	??_main& (0+255),f,c
   190  0000EC  D7FC               	bra	u27
   191  0000EE  2E12               	decfsz	(??_main+1)& (0+255),f,c
   192  0000F0  D7FA               	bra	u27
   193  0000F2  D000               	nop2	
   194                           
   195                           ;interup.c: 31: RB7=0;
   196  0000F4  9E81               	bcf	3969,7,c	;volatile
   197                           
   198                           ;interup.c: 32: _delay((unsigned long)((100)*(8000000/4000.0)));
   199  0000F6  0E02               	movlw	2
   200  0000F8  6E12               	movwf	(??_main+1)& (0+255),c
   201  0000FA  0E04               	movlw	4
   202  0000FC  6E11               	movwf	??_main& (0+255),c
   203  0000FE  0EBA               	movlw	186
   204  000100                     u37:
   205  000100  2EE8               	decfsz	wreg,f,c
   206  000102  D7FE               	bra	u37
   207  000104  2E11               	decfsz	??_main& (0+255),f,c
   208  000106  D7FC               	bra	u37
   209  000108  2E12               	decfsz	(??_main+1)& (0+255),f,c
   210  00010A  D7FA               	bra	u37
   211  00010C  D000               	nop2	
   212  00010E  D7DC               	goto	l682
   213  000110                     __end_of_main:
   214                           	opt stack 0
   215                           intcon	equ	0xFF2
   216                           wreg	equ	0xFE8
   217                           
   218 ;; *************** function _miinterrupt *****************
   219 ;; Defined at:
   220 ;;		line 5 in file "interup.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   234 ;;      Params:         0       0       0       0       0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0       0       0       0       0
   236 ;;      Temps:         16       0       0       0       0       0       0       0       0
   237 ;;      Totals:        16       0       0       0       0       0       0       0       0
   238 ;;Total ram usage:       16 bytes
   239 ;; Hardware stack levels used:    1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Interrupt level 2
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	intcode
   248  000008                     __pintcode:
   249                           	opt stack 0
   250  000008                     _miinterrupt:
   251                           	opt stack 30
   252                           
   253                           ;incstack = 0
   254  000008  8213               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   255  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   256                           intcon	equ	0xFF2
   257                           wreg	equ	0xFE8
   258                           
   259                           	psect	intcode_body
   260  000012                     __pintcode_body:
   261                           	opt stack 30
   262  000012                     int_func:
   263                           	opt stack 30
   264  000012  0006               	pop		; remove dummy address from shadow register refresh
   265  000014  CFFA F003          	movff	pclath,??_miinterrupt+2
   266  000018  CFFB F004          	movff	pclatu,??_miinterrupt+3
   267  00001C  CFE9 F005          	movff	fsr0l,??_miinterrupt+4
   268  000020  CFEA F006          	movff	fsr0h,??_miinterrupt+5
   269  000024  CFE1 F007          	movff	fsr1l,??_miinterrupt+6
   270  000028  CFE2 F008          	movff	fsr1h,??_miinterrupt+7
   271  00002C  CFD9 F009          	movff	fsr2l,??_miinterrupt+8
   272  000030  CFDA F00A          	movff	fsr2h,??_miinterrupt+9
   273  000034  CFF3 F00B          	movff	prodl,??_miinterrupt+10
   274  000038  CFF4 F00C          	movff	prodh,??_miinterrupt+11
   275  00003C  CFF6 F00D          	movff	tblptrl,??_miinterrupt+12
   276  000040  CFF7 F00E          	movff	tblptrh,??_miinterrupt+13
   277  000044  CFF8 F00F          	movff	tblptru,??_miinterrupt+14
   278  000048  CFF5 F010          	movff	tablat,??_miinterrupt+15
   279                           
   280                           ;interup.c: 7: PORTC=TMR0L;
   281  00004C  CFD6 FF82          	movff	4054,3970	;volatile
   282                           
   283                           ;interup.c: 8: PORTD=TMR0H;
   284  000050  CFD7 FF83          	movff	4055,3971	;volatile
   285                           
   286                           ;interup.c: 9: TMR0=0;
   287  000054  0E00               	movlw	0
   288  000056  6ED7               	movwf	4055,c	;volatile
   289  000058  0E00               	movlw	0
   290  00005A  6ED6               	movwf	4054,c	;volatile
   291                           
   292                           ;interup.c: 10: INT0IF=0;
   293  00005C  92F2               	bcf	intcon,1,c	;volatile
   294                           
   295                           ;interup.c: 11: RB6=0;
   296  00005E  9C81               	bcf	3969,6,c	;volatile
   297                           
   298                           ;interup.c: 12: _delay((unsigned long)((300)*(8000000/4000.0)));
   299  000060  0E04               	movlw	4
   300  000062  6E02               	movwf	(??_miinterrupt+1)& (0+255),c
   301  000064  0E0C               	movlw	12
   302  000066  6E01               	movwf	??_miinterrupt& (0+255),c
   303  000068  0E34               	movlw	52
   304  00006A                     i2u4_47:
   305  00006A  2EE8               	decfsz	wreg,f,c
   306  00006C  D7FE               	bra	i2u4_47
   307  00006E  2E01               	decfsz	??_miinterrupt& (0+255),f,c
   308  000070  D7FC               	bra	i2u4_47
   309  000072  2E02               	decfsz	(??_miinterrupt+1)& (0+255),f,c
   310  000074  D7FA               	bra	i2u4_47
   311  000076  C010  FFF5         	movff	??_miinterrupt+15,tablat
   312  00007A  C00F  FFF8         	movff	??_miinterrupt+14,tblptru
   313  00007E  C00E  FFF7         	movff	??_miinterrupt+13,tblptrh
   314  000082  C00D  FFF6         	movff	??_miinterrupt+12,tblptrl
   315  000086  C00C  FFF4         	movff	??_miinterrupt+11,prodh
   316  00008A  C00B  FFF3         	movff	??_miinterrupt+10,prodl
   317  00008E  C00A  FFDA         	movff	??_miinterrupt+9,fsr2h
   318  000092  C009  FFD9         	movff	??_miinterrupt+8,fsr2l
   319  000096  C008  FFE2         	movff	??_miinterrupt+7,fsr1h
   320  00009A  C007  FFE1         	movff	??_miinterrupt+6,fsr1l
   321  00009E  C006  FFEA         	movff	??_miinterrupt+5,fsr0h
   322  0000A2  C005  FFE9         	movff	??_miinterrupt+4,fsr0l
   323  0000A6  C004  FFFB         	movff	??_miinterrupt+3,pclatu
   324  0000AA  C003  FFFA         	movff	??_miinterrupt+2,pclath
   325  0000AE  9213               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   326  0000B0  0011               	retfie		f
   327  0000B2                     __end_of_miinterrupt:
   328                           	opt stack 0
   329  0000                     pclatu	equ	0xFFB
   330                           pclath	equ	0xFFA
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           prodh	equ	0xFF4
   336                           prodl	equ	0xFF3
   337                           intcon	equ	0xFF2
   338                           fsr0h	equ	0xFEA
   339                           fsr0l	equ	0xFE9
   340                           wreg	equ	0xFE8
   341                           fsr1h	equ	0xFE2
   342                           fsr1l	equ	0xFE1
   343                           fsr2h	equ	0xFDA
   344                           fsr2l	equ	0xFD9
   345                           pclatu	equ	0xFFB
   346                           pclath	equ	0xFFA
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           prodh	equ	0xFF4
   352                           prodl	equ	0xFF3
   353                           intcon	equ	0xFF2
   354                           fsr0h	equ	0xFEA
   355                           fsr0l	equ	0xFE9
   356                           wreg	equ	0xFE8
   357                           fsr1h	equ	0xFE2
   358                           fsr1l	equ	0xFE1
   359                           fsr2h	equ	0xFDA
   360                           fsr2l	equ	0xFD9
   361                           
   362                           	psect	rparam
   363  0000                     pclatu	equ	0xFFB
   364                           pclath	equ	0xFFA
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           prodh	equ	0xFF4
   370                           prodl	equ	0xFF3
   371                           intcon	equ	0xFF2
   372                           fsr0h	equ	0xFEA
   373                           fsr0l	equ	0xFE9
   374                           wreg	equ	0xFE8
   375                           fsr1h	equ	0xFE2
   376                           fsr1l	equ	0xFE1
   377                           fsr2h	equ	0xFDA
   378                           fsr2l	equ	0xFD9
   379                           
   380                           	psect	temp
   381  000013                     btemp:
   382                           	opt stack 0
   383  000013                     	ds	1
   384  0000                     int$flags	set	btemp
   385                           pclatu	equ	0xFFB
   386                           pclath	equ	0xFFA
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           prodh	equ	0xFF4
   392                           prodl	equ	0xFF3
   393                           intcon	equ	0xFF2
   394                           fsr0h	equ	0xFEA
   395                           fsr0l	equ	0xFE9
   396                           wreg	equ	0xFE8
   397                           fsr1h	equ	0xFE2
   398                           fsr1l	equ	0xFE1
   399                           fsr2h	equ	0xFDA
   400                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _miinterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _miinterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _miinterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _miinterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _miinterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _miinterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _miinterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _miinterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _miinterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _miinterrupt                                         16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _miinterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     12      12       1       19.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Oct 02 00:20:09 2017

                     u27 00E6                       u37 0100              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l682 00C8                      l688 00DA             __CFG_CPB$OFF 000000  
                    _RB6 007C0E                      _RB7 007C0F             __CFG_CPD$OFF 000000  
                    wreg 000FE8             __CFG_WDT$OFF 000000                     _TMR0 000FD6  
                   _main 00B2                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0013                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$2 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _T0CON 000FD5  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTC 000F82  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    pclath 000FFA                    tablat 000FF5  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000             ?_miinterrupt 0001  
        __initialization 0110             __end_of_main 0110                   ??_main 0011  
          __activetblptr 000000                   _ADCON1 000FC1                   _INT0IF 007F91  
                 _INTCON 000FF2                   _OSCCON 000FD3                   i2u4_47 006A  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0110            ___rparam_used 000001           __pcstackCOMRAM 0001  
   __size_of_miinterrupt 00AA          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0110                  __ramtop 0800  
                __ptext0 00B2           __pintcode_body 0012     end_of_initialization 0110  
                int_func 0012      start_initialization 0110         __CFG_LPT1OSC$OFF 000000  
          ??_miinterrupt 0001                __pintcode 0008         __CFG_WDTPS$32768 000000  
    __end_of_miinterrupt 00B2                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 005E              _miinterrupt 0008                 int$flags 0013  
  __CFG_CPUDIV$OSC1_PLL2 000000                 intlevel2 0000      __CFG_FOSC$INTOSC_XT 000000  
