

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jan 26 17:22:37 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.42
    15                           ; Generated 13/04/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTD	set	3971
    49  0000                     _TRISD	set	3989
    50  0000                     _ADCON1	set	4033
    51  0000                     _OSCCON	set	4051
    52  0000                     _TMR2	set	4044
    53  0000                     _T2CONbits	set	4042
    54  0000                     _CCPR1L	set	4030
    55  0000                     _CCP1CON	set	4029
    56  0000                     _PR2	set	4043
    57  0000                     _T2CON	set	4042
    58  0000                     _TRISCbits	set	3988
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  007CE6                     __pcinit:
    64                           	opt stack 0
    65  007CE6                     start_initialization:
    66                           	opt stack 0
    67  007CE6                     __initialization:
    68                           	opt stack 0
    69  007CE6                     end_of_initialization:
    70                           	opt stack 0
    71  007CE6                     __end_of__initialization:
    72                           	opt stack 0
    73  007CE6  0100               	movlb	0
    74  007CE8  EF76  F03E         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMRAM
    77  000001                     __pcstackCOMRAM:
    78                           	opt stack 0
    79  000001                     ?___lmul:
    80                           	opt stack 0
    81  000001                     ?___lldiv:
    82                           	opt stack 0
    83  000001                     ___lmul@multiplier:
    84                           	opt stack 0
    85  000001                     ___lldiv@dividend:
    86                           	opt stack 0
    87                           
    88                           ; 4 bytes @ 0x0
    89  000001                     	ds	4
    90  000005                     ___lmul@multiplicand:
    91                           	opt stack 0
    92  000005                     ___lldiv@divisor:
    93                           	opt stack 0
    94                           
    95                           ; 4 bytes @ 0x4
    96  000005                     	ds	4
    97  000009                     ___lmul@product:
    98                           	opt stack 0
    99  000009                     ___lldiv@quotient:
   100                           	opt stack 0
   101                           
   102                           ; 4 bytes @ 0x8
   103  000009                     	ds	4
   104  00000D                     ___lldiv@counter:
   105                           	opt stack 0
   106                           
   107                           ; 1 bytes @ 0xC
   108  00000D                     	ds	1
   109  00000E                     PWMccp1out@duty:
   110                           	opt stack 0
   111                           
   112                           ; 2 bytes @ 0xD
   113  00000E                     	ds	2
   114  000010                     PWMccp1out@fpwm:
   115                           	opt stack 0
   116                           
   117                           ; 2 bytes @ 0xF
   118  000010                     	ds	2
   119  000012                     ??_PWMccp1out:
   120                           
   121                           ; 1 bytes @ 0x11
   122  000012                     	ds	4
   123  000016                     PWMccp1out@prescalador:
   124                           	opt stack 0
   125                           
   126                           ; 2 bytes @ 0x15
   127  000016                     	ds	2
   128  000018                     PWMccp1out@AuxCCP1CON:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x17
   132  000018                     	ds	2
   133  00001A                     PWMccp1out@PR2cal:
   134                           	opt stack 0
   135                           
   136                           ; 4 bytes @ 0x19
   137  00001A                     	ds	4
   138  00001E                     PWMccp1out@AuxCCPR1L:
   139                           	opt stack 0
   140                           
   141                           ; 4 bytes @ 0x1D
   142  00001E                     	ds	4
   143  000022                     
   144                           ; 1 bytes @ 0x21
   145 ;;
   146 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   147 ;;
   148 ;; *************** function _main *****************
   149 ;; Defined at:
   150 ;;		line 133 in file "MetodoPWMconCCP.c"
   151 ;; Parameters:    Size  Location     Type
   152 ;;		None
   153 ;; Auto vars:     Size  Location     Type
   154 ;;		None
   155 ;; Return value:  Size  Location     Type
   156 ;;                  1    wreg      void 
   157 ;; Registers used:
   158 ;;		wreg, status,2, status,0, cstack
   159 ;; Tracked objects:
   160 ;;		On entry : 0/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   164 ;;      Params:         0       0       0       0       0       0       0       0       0
   165 ;;      Locals:         0       0       0       0       0       0       0       0       0
   166 ;;      Temps:          0       0       0       0       0       0       0       0       0
   167 ;;      Totals:         0       0       0       0       0       0       0       0       0
   168 ;;Total ram usage:        0 bytes
   169 ;; Hardware stack levels required when called:    2
   170 ;; This function calls:
   171 ;;		_PWMccp1out
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text0
   178  007CEC                     __ptext0:
   179                           	opt stack 0
   180  007CEC                     _main:
   181                           	opt stack 29
   182                           
   183                           ;MetodoPWMconCCP.c: 134: OSCCON= 0b01110011;
   184                           
   185                           ;incstack = 0
   186  007CEC  0E73               	movlw	115
   187  007CEE  6ED3               	movwf	4051,c	;volatile
   188                           
   189                           ;MetodoPWMconCCP.c: 135: ADCON1=0xff;
   190  007CF0  68C1               	setf	4033,c	;volatile
   191                           
   192                           ;MetodoPWMconCCP.c: 137: PWMccp1out(50,5000);
   193  007CF2  0E00               	movlw	0
   194  007CF4  6E0F               	movwf	PWMccp1out@duty+1,c
   195  007CF6  0E32               	movlw	50
   196  007CF8  6E0E               	movwf	PWMccp1out@duty,c
   197  007CFA  0E13               	movlw	19
   198  007CFC  6E11               	movwf	PWMccp1out@fpwm+1,c
   199  007CFE  0E88               	movlw	136
   200  007D00  6E10               	movwf	PWMccp1out@fpwm,c
   201  007D02  ECF3  F03E         	call	_PWMccp1out	;wreg free
   202                           
   203                           ;MetodoPWMconCCP.c: 138: TRISD=0;
   204  007D06  0E00               	movlw	0
   205  007D08  6E95               	movwf	3989,c	;volatile
   206  007D0A                     l828:
   207  007D0A  2A83               	incf	3971,f,c	;volatile
   208  007D0C  D7FE               	goto	l828
   209  007D0E                     __end_of_main:
   210                           	opt stack 0
   211                           
   212 ;; *************** function _PWMccp1out *****************
   213 ;; Defined at:
   214 ;;		line 92 in file "MetodoPWMconCCP.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;  duty            2   13[COMRAM] unsigned int 
   217 ;;  fpwm            2   15[COMRAM] unsigned int 
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  AuxCCPR1L       4   29[COMRAM] unsigned long 
   220 ;;  PR2cal          4   25[COMRAM] unsigned long 
   221 ;;  AuxCCP1CON      2   23[COMRAM] unsigned int 
   222 ;;  prescalador     2   21[COMRAM] unsigned int 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   232 ;;      Params:         4       0       0       0       0       0       0       0       0
   233 ;;      Locals:        12       0       0       0       0       0       0       0       0
   234 ;;      Temps:          4       0       0       0       0       0       0       0       0
   235 ;;      Totals:        20       0       0       0       0       0       0       0       0
   236 ;;Total ram usage:       20 bytes
   237 ;; Hardware stack levels used:    1
   238 ;; Hardware stack levels required when called:    1
   239 ;; This function calls:
   240 ;;		___lldiv
   241 ;;		___lmul
   242 ;; This function is called by:
   243 ;;		_main
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text1
   248  007DE6                     __ptext1:
   249                           	opt stack 0
   250  007DE6                     _PWMccp1out:
   251                           	opt stack 29
   252                           
   253                           ;MetodoPWMconCCP.c: 97: TRISCbits.RC2=0;
   254                           
   255                           ;incstack = 0
   256  007DE6  9494               	bcf	3988,2,c	;volatile
   257                           
   258                           ;MetodoPWMconCCP.c: 98: unsigned int prescalador=1;
   259  007DE8  0E00               	movlw	0
   260  007DEA  6E17               	movwf	PWMccp1out@prescalador+1,c
   261  007DEC  0E01               	movlw	1
   262  007DEE  6E16               	movwf	PWMccp1out@prescalador,c
   263                           
   264                           ;MetodoPWMconCCP.c: 99: unsigned long PR2cal=8000000;
   265  007DF0  0E00               	movlw	0
   266  007DF2  6E1A               	movwf	PWMccp1out@PR2cal,c
   267  007DF4  0E12               	movlw	18
   268  007DF6  6E1B               	movwf	PWMccp1out@PR2cal+1,c
   269  007DF8  0E7A               	movlw	122
   270  007DFA  6E1C               	movwf	PWMccp1out@PR2cal+2,c
   271  007DFC  0E00               	movlw	0
   272  007DFE  6E1D               	movwf	PWMccp1out@PR2cal+3,c
   273                           
   274                           ;MetodoPWMconCCP.c: 100: PR2cal=PR2cal/fpwm;
   275  007E00  C01A  F001         	movff	PWMccp1out@PR2cal,___lldiv@dividend
   276  007E04  C01B  F002         	movff	PWMccp1out@PR2cal+1,___lldiv@dividend+1
   277  007E08  C01C  F003         	movff	PWMccp1out@PR2cal+2,___lldiv@dividend+2
   278  007E0C  C01D  F004         	movff	PWMccp1out@PR2cal+3,___lldiv@dividend+3
   279  007E10  C010  F005         	movff	PWMccp1out@fpwm,___lldiv@divisor
   280  007E14  C011  F006         	movff	PWMccp1out@fpwm+1,___lldiv@divisor+1
   281  007E18  6A07               	clrf	___lldiv@divisor+2,c
   282  007E1A  6A08               	clrf	___lldiv@divisor+3,c
   283  007E1C  ECB2  F03E         	call	___lldiv	;wreg free
   284  007E20  C001  F01A         	movff	?___lldiv,PWMccp1out@PR2cal
   285  007E24  C002  F01B         	movff	?___lldiv+1,PWMccp1out@PR2cal+1
   286  007E28  C003  F01C         	movff	?___lldiv+2,PWMccp1out@PR2cal+2
   287  007E2C  C004  F01D         	movff	?___lldiv+3,PWMccp1out@PR2cal+3
   288                           
   289                           ;MetodoPWMconCCP.c: 101: PR2cal=PR2cal/4;
   290  007E30  C01A  F012         	movff	PWMccp1out@PR2cal,??_PWMccp1out
   291  007E34  C01B  F013         	movff	PWMccp1out@PR2cal+1,??_PWMccp1out+1
   292  007E38  C01C  F014         	movff	PWMccp1out@PR2cal+2,??_PWMccp1out+2
   293  007E3C  C01D  F015         	movff	PWMccp1out@PR2cal+3,??_PWMccp1out+3
   294  007E40  0E03               	movlw	3
   295  007E42  D005               	goto	u160
   296  007E44                     u165:
   297  007E44  90D8               	bcf	status,0,c
   298  007E46  3215               	rrcf	??_PWMccp1out+3,f,c
   299  007E48  3214               	rrcf	??_PWMccp1out+2,f,c
   300  007E4A  3213               	rrcf	??_PWMccp1out+1,f,c
   301  007E4C  3212               	rrcf	??_PWMccp1out,f,c
   302  007E4E                     u160:
   303  007E4E  2EE8               	decfsz	wreg,f,c
   304  007E50  D7F9               	goto	u165
   305  007E52  C012  F01A         	movff	??_PWMccp1out,PWMccp1out@PR2cal
   306  007E56  C013  F01B         	movff	??_PWMccp1out+1,PWMccp1out@PR2cal+1
   307  007E5A  C014  F01C         	movff	??_PWMccp1out+2,PWMccp1out@PR2cal+2
   308  007E5E  C015  F01D         	movff	??_PWMccp1out+3,PWMccp1out@PR2cal+3
   309                           
   310                           ;MetodoPWMconCCP.c: 102: T2CON=0b00000000;
   311  007E62  0E00               	movlw	0
   312  007E64  6ECA               	movwf	4042,c	;volatile
   313                           
   314                           ;MetodoPWMconCCP.c: 103: while(PR2cal>256){
   315  007E66  D028               	goto	l790
   316  007E68                     l786:
   317                           
   318                           ;MetodoPWMconCCP.c: 104: prescalador=prescalador*4;
   319  007E68  C016  F012         	movff	PWMccp1out@prescalador,??_PWMccp1out
   320  007E6C  C017  F013         	movff	PWMccp1out@prescalador+1,??_PWMccp1out+1
   321  007E70  90D8               	bcf	status,0,c
   322  007E72  3612               	rlcf	??_PWMccp1out,f,c
   323  007E74  3613               	rlcf	??_PWMccp1out+1,f,c
   324  007E76  90D8               	bcf	status,0,c
   325  007E78  3612               	rlcf	??_PWMccp1out,f,c
   326  007E7A  3613               	rlcf	??_PWMccp1out+1,f,c
   327  007E7C  C012  F016         	movff	??_PWMccp1out,PWMccp1out@prescalador
   328  007E80  C013  F017         	movff	??_PWMccp1out+1,PWMccp1out@prescalador+1
   329                           
   330                           ;MetodoPWMconCCP.c: 105: T2CON++;
   331  007E84  2ACA               	incf	4042,f,c	;volatile
   332                           
   333                           ;MetodoPWMconCCP.c: 106: PR2cal=PR2cal/4;
   334  007E86  C01A  F012         	movff	PWMccp1out@PR2cal,??_PWMccp1out
   335  007E8A  C01B  F013         	movff	PWMccp1out@PR2cal+1,??_PWMccp1out+1
   336  007E8E  C01C  F014         	movff	PWMccp1out@PR2cal+2,??_PWMccp1out+2
   337  007E92  C01D  F015         	movff	PWMccp1out@PR2cal+3,??_PWMccp1out+3
   338  007E96  0E03               	movlw	3
   339  007E98  D005               	goto	u170
   340  007E9A                     u175:
   341  007E9A  90D8               	bcf	status,0,c
   342  007E9C  3215               	rrcf	??_PWMccp1out+3,f,c
   343  007E9E  3214               	rrcf	??_PWMccp1out+2,f,c
   344  007EA0  3213               	rrcf	??_PWMccp1out+1,f,c
   345  007EA2  3212               	rrcf	??_PWMccp1out,f,c
   346  007EA4                     u170:
   347  007EA4  2EE8               	decfsz	wreg,f,c
   348  007EA6  D7F9               	goto	u175
   349  007EA8  C012  F01A         	movff	??_PWMccp1out,PWMccp1out@PR2cal
   350  007EAC  C013  F01B         	movff	??_PWMccp1out+1,PWMccp1out@PR2cal+1
   351  007EB0  C014  F01C         	movff	??_PWMccp1out+2,PWMccp1out@PR2cal+2
   352  007EB4  C015  F01D         	movff	??_PWMccp1out+3,PWMccp1out@PR2cal+3
   353  007EB8                     l790:
   354  007EB8  501D               	movf	PWMccp1out@PR2cal+3,w,c
   355  007EBA  101C               	iorwf	PWMccp1out@PR2cal+2,w,c
   356  007EBC  E1D5               	bnz	l786
   357  007EBE  041A               	decf	PWMccp1out@PR2cal,w,c
   358  007EC0  0E01               	movlw	1
   359  007EC2  581B               	subwfb	PWMccp1out@PR2cal+1,w,c
   360  007EC4  B0D8               	btfsc	status,0,c
   361  007EC6  D7D0               	goto	l786
   362                           
   363                           ;MetodoPWMconCCP.c: 107: }
   364                           ;MetodoPWMconCCP.c: 108: PR2cal--;
   365  007EC8  061A               	decf	PWMccp1out@PR2cal,f,c
   366  007ECA  0E00               	movlw	0
   367  007ECC  5A1B               	subwfb	PWMccp1out@PR2cal+1,f,c
   368  007ECE  5A1C               	subwfb	PWMccp1out@PR2cal+2,f,c
   369  007ED0  5A1D               	subwfb	PWMccp1out@PR2cal+3,f,c
   370                           
   371                           ;MetodoPWMconCCP.c: 109: PR2=PR2cal;
   372  007ED2  C01A  FFCB         	movff	PWMccp1out@PR2cal,4043	;volatile
   373                           
   374                           ;MetodoPWMconCCP.c: 116: unsigned long AuxCCPR1L=PR2cal;
   375  007ED6  C01A  F01E         	movff	PWMccp1out@PR2cal,PWMccp1out@AuxCCPR1L
   376  007EDA  C01B  F01F         	movff	PWMccp1out@PR2cal+1,PWMccp1out@AuxCCPR1L+1
   377  007EDE  C01C  F020         	movff	PWMccp1out@PR2cal+2,PWMccp1out@AuxCCPR1L+2
   378  007EE2  C01D  F021         	movff	PWMccp1out@PR2cal+3,PWMccp1out@AuxCCPR1L+3
   379                           
   380                           ;MetodoPWMconCCP.c: 117: AuxCCPR1L++;
   381  007EE6  0E01               	movlw	1
   382  007EE8  261E               	addwf	PWMccp1out@AuxCCPR1L,f,c
   383  007EEA  0E00               	movlw	0
   384  007EEC  221F               	addwfc	PWMccp1out@AuxCCPR1L+1,f,c
   385  007EEE  2220               	addwfc	PWMccp1out@AuxCCPR1L+2,f,c
   386  007EF0  2221               	addwfc	PWMccp1out@AuxCCPR1L+3,f,c
   387                           
   388                           ;MetodoPWMconCCP.c: 118: AuxCCPR1L=AuxCCPR1L*duty;
   389  007EF2  C00E  F001         	movff	PWMccp1out@duty,___lmul@multiplier
   390  007EF6  C00F  F002         	movff	PWMccp1out@duty+1,___lmul@multiplier+1
   391  007EFA  6A03               	clrf	___lmul@multiplier+2,c
   392  007EFC  6A04               	clrf	___lmul@multiplier+3,c
   393  007EFE  C01E  F005         	movff	PWMccp1out@AuxCCPR1L,___lmul@multiplicand
   394  007F02  C01F  F006         	movff	PWMccp1out@AuxCCPR1L+1,___lmul@multiplicand+1
   395  007F06  C020  F007         	movff	PWMccp1out@AuxCCPR1L+2,___lmul@multiplicand+2
   396  007F0A  C021  F008         	movff	PWMccp1out@AuxCCPR1L+3,___lmul@multiplicand+3
   397  007F0E  EC87  F03E         	call	___lmul	;wreg free
   398  007F12  C001  F01E         	movff	?___lmul,PWMccp1out@AuxCCPR1L
   399  007F16  C002  F01F         	movff	?___lmul+1,PWMccp1out@AuxCCPR1L+1
   400  007F1A  C003  F020         	movff	?___lmul+2,PWMccp1out@AuxCCPR1L+2
   401  007F1E  C004  F021         	movff	?___lmul+3,PWMccp1out@AuxCCPR1L+3
   402                           
   403                           ;MetodoPWMconCCP.c: 119: AuxCCPR1L=AuxCCPR1L*4;
   404  007F22  C01E  F012         	movff	PWMccp1out@AuxCCPR1L,??_PWMccp1out
   405  007F26  C01F  F013         	movff	PWMccp1out@AuxCCPR1L+1,??_PWMccp1out+1
   406  007F2A  C020  F014         	movff	PWMccp1out@AuxCCPR1L+2,??_PWMccp1out+2
   407  007F2E  C021  F015         	movff	PWMccp1out@AuxCCPR1L+3,??_PWMccp1out+3
   408  007F32  0E02               	movlw	2
   409  007F34                     u195:
   410  007F34  90D8               	bcf	status,0,c
   411  007F36  3612               	rlcf	??_PWMccp1out,f,c
   412  007F38  3613               	rlcf	??_PWMccp1out+1,f,c
   413  007F3A  3614               	rlcf	??_PWMccp1out+2,f,c
   414  007F3C  3615               	rlcf	??_PWMccp1out+3,f,c
   415  007F3E  2EE8               	decfsz	wreg,f,c
   416  007F40  D7F9               	goto	u195
   417  007F42  C012  F01E         	movff	??_PWMccp1out,PWMccp1out@AuxCCPR1L
   418  007F46  C013  F01F         	movff	??_PWMccp1out+1,PWMccp1out@AuxCCPR1L+1
   419  007F4A  C014  F020         	movff	??_PWMccp1out+2,PWMccp1out@AuxCCPR1L+2
   420  007F4E  C015  F021         	movff	??_PWMccp1out+3,PWMccp1out@AuxCCPR1L+3
   421                           
   422                           ;MetodoPWMconCCP.c: 120: AuxCCPR1L=AuxCCPR1L/100;
   423  007F52  C01E  F001         	movff	PWMccp1out@AuxCCPR1L,___lldiv@dividend
   424  007F56  C01F  F002         	movff	PWMccp1out@AuxCCPR1L+1,___lldiv@dividend+1
   425  007F5A  C020  F003         	movff	PWMccp1out@AuxCCPR1L+2,___lldiv@dividend+2
   426  007F5E  C021  F004         	movff	PWMccp1out@AuxCCPR1L+3,___lldiv@dividend+3
   427  007F62  0E64               	movlw	100
   428  007F64  6E05               	movwf	___lldiv@divisor,c
   429  007F66  0E00               	movlw	0
   430  007F68  6E06               	movwf	___lldiv@divisor+1,c
   431  007F6A  0E00               	movlw	0
   432  007F6C  6E07               	movwf	___lldiv@divisor+2,c
   433  007F6E  0E00               	movlw	0
   434  007F70  6E08               	movwf	___lldiv@divisor+3,c
   435  007F72  ECB2  F03E         	call	___lldiv	;wreg free
   436  007F76  C001  F01E         	movff	?___lldiv,PWMccp1out@AuxCCPR1L
   437  007F7A  C002  F01F         	movff	?___lldiv+1,PWMccp1out@AuxCCPR1L+1
   438  007F7E  C003  F020         	movff	?___lldiv+2,PWMccp1out@AuxCCPR1L+2
   439  007F82  C004  F021         	movff	?___lldiv+3,PWMccp1out@AuxCCPR1L+3
   440                           
   441                           ;MetodoPWMconCCP.c: 121: unsigned int AuxCCP1CON= AuxCCPR1L;
   442  007F86  C01E  F018         	movff	PWMccp1out@AuxCCPR1L,PWMccp1out@AuxCCP1CON
   443  007F8A  C01F  F019         	movff	PWMccp1out@AuxCCPR1L+1,PWMccp1out@AuxCCP1CON+1
   444                           
   445                           ;MetodoPWMconCCP.c: 122: AuxCCP1CON= AuxCCP1CON & 0b00000011 ;
   446  007F8E  0E03               	movlw	3
   447  007F90  1418               	andwf	PWMccp1out@AuxCCP1CON,w,c
   448  007F92  6E18               	movwf	PWMccp1out@AuxCCP1CON,c
   449  007F94  6A19               	clrf	PWMccp1out@AuxCCP1CON+1,c
   450                           
   451                           ;MetodoPWMconCCP.c: 123: AuxCCP1CON= AuxCCP1CON*16;
   452  007F96  C018  F012         	movff	PWMccp1out@AuxCCP1CON,??_PWMccp1out
   453  007F9A  C019  F013         	movff	PWMccp1out@AuxCCP1CON+1,??_PWMccp1out+1
   454  007F9E  3A12               	swapf	??_PWMccp1out,f,c
   455  007FA0  3A13               	swapf	??_PWMccp1out+1,f,c
   456  007FA2  0EF0               	movlw	240
   457  007FA4  1613               	andwf	??_PWMccp1out+1,f,c
   458  007FA6  5012               	movf	??_PWMccp1out,w,c
   459  007FA8  0B0F               	andlw	15
   460  007FAA  1213               	iorwf	??_PWMccp1out+1,f,c
   461  007FAC  0EF0               	movlw	240
   462  007FAE  1612               	andwf	??_PWMccp1out,f,c
   463  007FB0  C012  F018         	movff	??_PWMccp1out,PWMccp1out@AuxCCP1CON
   464  007FB4  C013  F019         	movff	??_PWMccp1out+1,PWMccp1out@AuxCCP1CON+1
   465                           
   466                           ;MetodoPWMconCCP.c: 124: CCP1CON= 0b00001100;
   467  007FB8  0E0C               	movlw	12
   468  007FBA  6EBD               	movwf	4029,c	;volatile
   469                           
   470                           ;MetodoPWMconCCP.c: 125: CCP1CON= CCP1CON|AuxCCP1CON;
   471  007FBC  50BD               	movf	4029,w,c
   472  007FBE  1018               	iorwf	PWMccp1out@AuxCCP1CON,w,c
   473  007FC0  6EBD               	movwf	4029,c	;volatile
   474                           
   475                           ;MetodoPWMconCCP.c: 126: AuxCCPR1L=AuxCCPR1L/4;
   476  007FC2  C01E  F012         	movff	PWMccp1out@AuxCCPR1L,??_PWMccp1out
   477  007FC6  C01F  F013         	movff	PWMccp1out@AuxCCPR1L+1,??_PWMccp1out+1
   478  007FCA  C020  F014         	movff	PWMccp1out@AuxCCPR1L+2,??_PWMccp1out+2
   479  007FCE  C021  F015         	movff	PWMccp1out@AuxCCPR1L+3,??_PWMccp1out+3
   480  007FD2  0E03               	movlw	3
   481  007FD4  D005               	goto	u200
   482  007FD6                     u205:
   483  007FD6  90D8               	bcf	status,0,c
   484  007FD8  3215               	rrcf	??_PWMccp1out+3,f,c
   485  007FDA  3214               	rrcf	??_PWMccp1out+2,f,c
   486  007FDC  3213               	rrcf	??_PWMccp1out+1,f,c
   487  007FDE  3212               	rrcf	??_PWMccp1out,f,c
   488  007FE0                     u200:
   489  007FE0  2EE8               	decfsz	wreg,f,c
   490  007FE2  D7F9               	goto	u205
   491  007FE4  C012  F01E         	movff	??_PWMccp1out,PWMccp1out@AuxCCPR1L
   492  007FE8  C013  F01F         	movff	??_PWMccp1out+1,PWMccp1out@AuxCCPR1L+1
   493  007FEC  C014  F020         	movff	??_PWMccp1out+2,PWMccp1out@AuxCCPR1L+2
   494  007FF0  C015  F021         	movff	??_PWMccp1out+3,PWMccp1out@AuxCCPR1L+3
   495                           
   496                           ;MetodoPWMconCCP.c: 127: CCPR1L=AuxCCPR1L;
   497  007FF4  C01E  FFBE         	movff	PWMccp1out@AuxCCPR1L,4030	;volatile
   498                           
   499                           ;MetodoPWMconCCP.c: 128: T2CONbits.TMR2ON=1;
   500  007FF8  84CA               	bsf	4042,2,c	;volatile
   501                           
   502                           ;MetodoPWMconCCP.c: 129: TMR2=0;
   503  007FFA  0E00               	movlw	0
   504  007FFC  6ECC               	movwf	4044,c	;volatile
   505  007FFE  0012               	return		;funcret
   506  008000                     __end_of_PWMccp1out:
   507                           	opt stack 0
   508                           wreg	equ	0xFE8
   509                           status	equ	0xFD8
   510                           
   511 ;; *************** function ___lmul *****************
   512 ;; Defined at:
   513 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  multiplier      4    0[COMRAM] unsigned long 
   516 ;;  multiplicand    4    4[COMRAM] unsigned long 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  product         4    8[COMRAM] unsigned long 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  4    0[COMRAM] unsigned long 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   528 ;;      Params:         8       0       0       0       0       0       0       0       0
   529 ;;      Locals:         4       0       0       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0
   531 ;;      Totals:        12       0       0       0       0       0       0       0       0
   532 ;;Total ram usage:       12 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_PWMccp1out
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text2
   542  007D0E                     __ptext2:
   543                           	opt stack 0
   544  007D0E                     ___lmul:
   545                           	opt stack 29
   546                           
   547                           ;incstack = 0
   548  007D0E  0E00               	movlw	0
   549  007D10  6E09               	movwf	___lmul@product,c
   550  007D12  0E00               	movlw	0
   551  007D14  6E0A               	movwf	___lmul@product+1,c
   552  007D16  0E00               	movlw	0
   553  007D18  6E0B               	movwf	___lmul@product+2,c
   554  007D1A  0E00               	movlw	0
   555  007D1C  6E0C               	movwf	___lmul@product+3,c
   556  007D1E                     l746:
   557  007D1E  A001               	btfss	___lmul@multiplier,0,c
   558  007D20  D008               	goto	l750
   559  007D22  5005               	movf	___lmul@multiplicand,w,c
   560  007D24  2609               	addwf	___lmul@product,f,c
   561  007D26  5006               	movf	___lmul@multiplicand+1,w,c
   562  007D28  220A               	addwfc	___lmul@product+1,f,c
   563  007D2A  5007               	movf	___lmul@multiplicand+2,w,c
   564  007D2C  220B               	addwfc	___lmul@product+2,f,c
   565  007D2E  5008               	movf	___lmul@multiplicand+3,w,c
   566  007D30  220C               	addwfc	___lmul@product+3,f,c
   567  007D32                     l750:
   568  007D32  90D8               	bcf	status,0,c
   569  007D34  3605               	rlcf	___lmul@multiplicand,f,c
   570  007D36  3606               	rlcf	___lmul@multiplicand+1,f,c
   571  007D38  3607               	rlcf	___lmul@multiplicand+2,f,c
   572  007D3A  3608               	rlcf	___lmul@multiplicand+3,f,c
   573  007D3C  90D8               	bcf	status,0,c
   574  007D3E  3204               	rrcf	___lmul@multiplier+3,f,c
   575  007D40  3203               	rrcf	___lmul@multiplier+2,f,c
   576  007D42  3202               	rrcf	___lmul@multiplier+1,f,c
   577  007D44  3201               	rrcf	___lmul@multiplier,f,c
   578  007D46  5001               	movf	___lmul@multiplier,w,c
   579  007D48  1002               	iorwf	___lmul@multiplier+1,w,c
   580  007D4A  1003               	iorwf	___lmul@multiplier+2,w,c
   581  007D4C  1004               	iorwf	___lmul@multiplier+3,w,c
   582  007D4E  A4D8               	btfss	status,2,c
   583  007D50  D7E6               	goto	l746
   584  007D52  C009  F001         	movff	___lmul@product,?___lmul
   585  007D56  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   586  007D5A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   587  007D5E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   588  007D62  0012               	return		;funcret
   589  007D64                     __end_of___lmul:
   590                           	opt stack 0
   591                           wreg	equ	0xFE8
   592                           status	equ	0xFD8
   593                           
   594 ;; *************** function ___lldiv *****************
   595 ;; Defined at:
   596 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  dividend        4    0[COMRAM] unsigned long 
   599 ;;  divisor         4    4[COMRAM] unsigned long 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  quotient        4    8[COMRAM] unsigned long 
   602 ;;  counter         1   12[COMRAM] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  4    0[COMRAM] unsigned long 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   612 ;;      Params:         8       0       0       0       0       0       0       0       0
   613 ;;      Locals:         5       0       0       0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0
   615 ;;      Totals:        13       0       0       0       0       0       0       0       0
   616 ;;Total ram usage:       13 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_PWMccp1out
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text3
   626  007D64                     __ptext3:
   627                           	opt stack 0
   628  007D64                     ___lldiv:
   629                           	opt stack 29
   630                           
   631                           ;incstack = 0
   632  007D64  0E00               	movlw	0
   633  007D66  6E09               	movwf	___lldiv@quotient,c
   634  007D68  0E00               	movlw	0
   635  007D6A  6E0A               	movwf	___lldiv@quotient+1,c
   636  007D6C  0E00               	movlw	0
   637  007D6E  6E0B               	movwf	___lldiv@quotient+2,c
   638  007D70  0E00               	movlw	0
   639  007D72  6E0C               	movwf	___lldiv@quotient+3,c
   640  007D74  5005               	movf	___lldiv@divisor,w,c
   641  007D76  1006               	iorwf	___lldiv@divisor+1,w,c
   642  007D78  1007               	iorwf	___lldiv@divisor+2,w,c
   643  007D7A  1008               	iorwf	___lldiv@divisor+3,w,c
   644  007D7C  B4D8               	btfsc	status,2,c
   645  007D7E  D02A               	goto	l386
   646  007D80  0E01               	movlw	1
   647  007D82  6E0D               	movwf	___lldiv@counter,c
   648  007D84  D006               	goto	l762
   649  007D86                     l760:
   650  007D86  90D8               	bcf	status,0,c
   651  007D88  3605               	rlcf	___lldiv@divisor,f,c
   652  007D8A  3606               	rlcf	___lldiv@divisor+1,f,c
   653  007D8C  3607               	rlcf	___lldiv@divisor+2,f,c
   654  007D8E  3608               	rlcf	___lldiv@divisor+3,f,c
   655  007D90  2A0D               	incf	___lldiv@counter,f,c
   656  007D92                     l762:
   657  007D92  AE08               	btfss	___lldiv@divisor+3,7,c
   658  007D94  D7F8               	goto	l760
   659  007D96                     l764:
   660  007D96  90D8               	bcf	status,0,c
   661  007D98  3609               	rlcf	___lldiv@quotient,f,c
   662  007D9A  360A               	rlcf	___lldiv@quotient+1,f,c
   663  007D9C  360B               	rlcf	___lldiv@quotient+2,f,c
   664  007D9E  360C               	rlcf	___lldiv@quotient+3,f,c
   665  007DA0  5005               	movf	___lldiv@divisor,w,c
   666  007DA2  5C01               	subwf	___lldiv@dividend,w,c
   667  007DA4  5006               	movf	___lldiv@divisor+1,w,c
   668  007DA6  5802               	subwfb	___lldiv@dividend+1,w,c
   669  007DA8  5007               	movf	___lldiv@divisor+2,w,c
   670  007DAA  5803               	subwfb	___lldiv@dividend+2,w,c
   671  007DAC  5008               	movf	___lldiv@divisor+3,w,c
   672  007DAE  5804               	subwfb	___lldiv@dividend+3,w,c
   673  007DB0  A0D8               	btfss	status,0,c
   674  007DB2  D009               	goto	l772
   675  007DB4  5005               	movf	___lldiv@divisor,w,c
   676  007DB6  5E01               	subwf	___lldiv@dividend,f,c
   677  007DB8  5006               	movf	___lldiv@divisor+1,w,c
   678  007DBA  5A02               	subwfb	___lldiv@dividend+1,f,c
   679  007DBC  5007               	movf	___lldiv@divisor+2,w,c
   680  007DBE  5A03               	subwfb	___lldiv@dividend+2,f,c
   681  007DC0  5008               	movf	___lldiv@divisor+3,w,c
   682  007DC2  5A04               	subwfb	___lldiv@dividend+3,f,c
   683  007DC4  8009               	bsf	___lldiv@quotient,0,c
   684  007DC6                     l772:
   685  007DC6  90D8               	bcf	status,0,c
   686  007DC8  3208               	rrcf	___lldiv@divisor+3,f,c
   687  007DCA  3207               	rrcf	___lldiv@divisor+2,f,c
   688  007DCC  3206               	rrcf	___lldiv@divisor+1,f,c
   689  007DCE  3205               	rrcf	___lldiv@divisor,f,c
   690  007DD0  2E0D               	decfsz	___lldiv@counter,f,c
   691  007DD2  D7E1               	goto	l764
   692  007DD4                     l386:
   693  007DD4  C009  F001         	movff	___lldiv@quotient,?___lldiv
   694  007DD8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   695  007DDC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   696  007DE0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   697  007DE4  0012               	return		;funcret
   698  007DE6                     __end_of___lldiv:
   699                           	opt stack 0
   700  0000                     wreg	equ	0xFE8
   701                           status	equ	0xFD8
   702                           wreg	equ	0xFE8
   703                           status	equ	0xFD8
   704                           
   705                           	psect	rparam
   706  0000                     wreg	equ	0xFE8
   707                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWMccp1out
    _PWMccp1out->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1400
                         _PWMccp1out
 ---------------------------------------------------------------------------------
 (1) _PWMccp1out                                          20    16      4    1400
                                             13 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMccp1out
     ___lldiv
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     21      21       1       34.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jan 26 17:22:37 2018

            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000              __CFG_WDT$ON 000000                      l386 7DD4  
                    l750 7D32                      l760 7D86                      l762 7D92  
                    l746 7D1E                      l772 7DC6                      l764 7D96  
                    l828 7D0A                      l790 7EB8                      l786 7E68  
           __CFG_CPB$OFF 000000                      u200 7FE0                      u205 7FD6  
                    u160 7E4E                      u170 7EA4                      u165 7E44  
                    _PR2 000FCB                      u175 7E9A             __CFG_CPD$OFF 000000  
                    u195 7F34               _PWMccp1out 7DE6                      wreg 000FE8  
                   _TMR2 000FCC                     _main 7CEC                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___lldiv 7DE6                    _T2CON 000FCA                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0005            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 7CE6  
           __end_of_main 7D0E                   ??_main 0022            __activetblptr 000000  
            ?_PWMccp1out 000E                   _ADCON1 000FC1                   _CCPR1L 000FBE  
                 _OSCCON 000FD3           __CFG_XINST$OFF 000000                   ___lmul 7D0E  
         __CFG_STVREN$ON 000000                ??___lldiv 0009         PWMccp1out@PR2cal 001A  
             __accesstop 0060  __end_of__initialization 7CE6            ___rparam_used 000001  
    __size_of_PWMccp1out 021A           __pcstackCOMRAM 0001           PWMccp1out@fpwm 0010  
         PWMccp1out@duty 000E                  ?___lmul 0001                  _CCP1CON 000FBD  
         ___lmul@product 0009          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000          __size_of___lmul 0056                  ___lldiv 7D64  
                __pcinit 7CE6                  __ramtop 0800                  __ptext0 7CEC  
                __ptext1 7DE6                  __ptext2 7D0E                  __ptext3 7D64  
           ??_PWMccp1out 0012                _T2CONbits 000FCA     end_of_initialization 7CE6  
        ___lldiv@divisor 0005          ___lldiv@counter 000D       __end_of_PWMccp1out 8000  
              _TRISCbits 000F94     PWMccp1out@AuxCCP1CON 0018           __end_of___lmul 7D64  
    start_initialization 7CE6                 ??___lmul 0009         __CFG_LPT1OSC$OFF 000000  
               ?___lldiv 0001         __CFG_WDTPS$32768 000000      PWMccp1out@AuxCCPR1L 001E  
      ___lmul@multiplier 0001                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___lldiv 0082            __size_of_main 0022    PWMccp1out@prescalador 0016  
  __CFG_CPUDIV$OSC1_PLL2 000000         ___lldiv@dividend 0001      __CFG_FOSC$INTOSC_HS 000000  
       ___lldiv@quotient 0009  
