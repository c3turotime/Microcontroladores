

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Oct 07 03:17:31 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.42
    18                           ; Generated 13/04/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ADCON1	set	4033
    52  0000                     _OSCCON	set	4051
    53  0000                     _PORTB	set	3969
    54  0000                     _TRISB	set	3987
    55  0000                     _RB7	set	31759
    56  0000                     _RB6	set	31758
    57  0000                     _RB5	set	31757
    58  0000                     _RB4	set	31756
    59  0000                     _RD2	set	31770
    60  0000                     _RD3	set	31771
    61  0000                     _RD4	set	31772
    62  0000                     _RD5	set	31773
    63  0000                     _RD6	set	31774
    64  0000                     _RD7	set	31775
    65  0000                     _TRISD2	set	31914
    66  0000                     _TRISD3	set	31915
    67  0000                     _TRISD4	set	31916
    68  0000                     _TRISD5	set	31917
    69  0000                     _TRISD6	set	31918
    70  0000                     _TRISD7	set	31919
    71                           
    72                           	psect	smallconst
    73  000800                     __psmallconst:
    74                           	opt stack 0
    75  000800  00                 	db	0
    76  000801                     STR_1:
    77  000801  43                 	db	67	;'C'
    78  000802  47                 	db	71	;'G'
    79  000803  72                 	db	114	;'r'
    80  000804  61                 	db	97	;'a'
    81  000805  6D                 	db	109	;'m'
    82  000806  20                 	db	32
    83  000807  00                 	db	0
    84                           
    85                           ; #config settings
    86  000808  00                 	db	0	; dummy byte at the end
    87  0000                     
    88                           	psect	cinit
    89  000C86                     __pcinit:
    90                           	opt stack 0
    91  000C86                     start_initialization:
    92                           	opt stack 0
    93  000C86                     __initialization:
    94                           	opt stack 0
    95  000C86                     end_of_initialization:
    96                           	opt stack 0
    97  000C86                     __end_of__initialization:
    98                           	opt stack 0
    99  000C86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   100  000C88  6EF8               	movwf	tblptru,c
   101  000C8A  0100               	movlb	0
   102  000C8C  EF88  F005         	goto	_main	;jump to C main() function
   103                           tblptru	equ	0xFF8
   104                           
   105                           	psect	cstackCOMRAM
   106  000001                     __pcstackCOMRAM:
   107                           	opt stack 0
   108  000001                     ??_Lcd_Cmd:
   109  000001                     ??_Lcd_Chr_CP:
   110  000001                     ?_sprintf:
   111                           	opt stack 0
   112  000001                     sprintf@sp:
   113                           	opt stack 0
   114                           
   115                           ; 2 bytes @ 0x0
   116  000001                     	ds	2
   117  000003                     Lcd_Chr_CP@data:
   118                           	opt stack 0
   119  000003                     Lcd_Cmd@data:
   120                           	opt stack 0
   121  000003                     sprintf@f:
   122                           	opt stack 0
   123                           
   124                           ; 2 bytes @ 0x2
   125  000003                     	ds	1
   126  000004                     ??_Lcd_Init:
   127  000004                     Lcd_Out2@x:
   128                           	opt stack 0
   129                           
   130                           ; 1 bytes @ 0x3
   131  000004                     	ds	1
   132  000005                     Lcd_Init@data:
   133                           	opt stack 0
   134  000005                     Lcd_Out2@buffer:
   135                           	opt stack 0
   136  000005                     sprintf@ap:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x4
   140  000005                     	ds	2
   141  000007                     Lcd_Out2@y:
   142                           	opt stack 0
   143  000007                     sprintf@c:
   144                           	opt stack 0
   145                           
   146                           ; 1 bytes @ 0x6
   147  000007                     	ds	1
   148  000008                     Lcd_Out2@data:
   149                           	opt stack 0
   150                           
   151                           ; 1 bytes @ 0x7
   152  000008                     	ds	1
   153  000009                     ??_main:
   154                           
   155                           ; 1 bytes @ 0x8
   156  000009                     	ds	2
   157  00000B                     main@buffer:
   158                           	opt stack 0
   159                           
   160                           ; 20 bytes @ 0xA
   161  00000B                     	ds	20
   162                           tblptru	equ	0xFF8
   163                           
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 42 in file "LCDAvanzado.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;  buffer         20   10[COMRAM] unsigned char [20]
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   183 ;;      Params:         0       0       0       0       0       0       0       0       0
   184 ;;      Locals:        20       0       0       0       0       0       0       0       0
   185 ;;      Temps:          2       0       0       0       0       0       0       0       0
   186 ;;      Totals:        22       0       0       0       0       0       0       0       0
   187 ;;Total ram usage:       22 bytes
   188 ;; Hardware stack levels required when called:    2
   189 ;; This function calls:
   190 ;;		_Lcd_Chr_CP
   191 ;;		_Lcd_Cmd
   192 ;;		_Lcd_Init
   193 ;;		_Lcd_Out2
   194 ;;		_sprintf
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  000B10                     __ptext0:
   202                           	opt stack 0
   203  000B10                     _main:
   204                           	opt stack 29
   205                           
   206                           ;LCDAvanzado.c: 43: OSCCON= 0b01110010;
   207                           
   208                           ;incstack = 0
   209  000B10  0E72               	movlw	114
   210  000B12  6ED3               	movwf	4051,c	;volatile
   211                           
   212                           ;LCDAvanzado.c: 44: ADCON1= 0x0f;
   213  000B14  0E0F               	movlw	15
   214  000B16  6EC1               	movwf	4033,c	;volatile
   215                           
   216                           ;LCDAvanzado.c: 45: char buffer[20];
   217                           ;LCDAvanzado.c: 46: Lcd_Init();
   218  000B18  EC05  F004         	call	_Lcd_Init	;wreg free
   219                           
   220                           ;LCDAvanzado.c: 47: Lcd_Cmd(1);
   221  000B1C  0E01               	movlw	1
   222  000B1E  EC0F  F005         	call	_Lcd_Cmd
   223                           
   224                           ;LCDAvanzado.c: 48: Lcd_Cmd(0b01000001);
   225  000B22  0E41               	movlw	65
   226  000B24  EC0F  F005         	call	_Lcd_Cmd
   227                           
   228                           ;LCDAvanzado.c: 49: Lcd_Chr_CP(0b00001100);
   229  000B28  0E0C               	movlw	12
   230  000B2A  EC92  F004         	call	_Lcd_Chr_CP
   231                           
   232                           ;LCDAvanzado.c: 50: Lcd_Chr_CP(0b00010010);
   233  000B2E  0E12               	movlw	18
   234  000B30  EC92  F004         	call	_Lcd_Chr_CP
   235                           
   236                           ;LCDAvanzado.c: 51: Lcd_Chr_CP(0b00010001);
   237  000B34  0E11               	movlw	17
   238  000B36  EC92  F004         	call	_Lcd_Chr_CP
   239                           
   240                           ;LCDAvanzado.c: 52: Lcd_Chr_CP(0b00001000);
   241  000B3A  0E08               	movlw	8
   242  000B3C  EC92  F004         	call	_Lcd_Chr_CP
   243                           
   244                           ;LCDAvanzado.c: 53: Lcd_Chr_CP(0b00000100);
   245  000B40  0E04               	movlw	4
   246  000B42  EC92  F004         	call	_Lcd_Chr_CP
   247                           
   248                           ;LCDAvanzado.c: 54: Lcd_Chr_CP(0b00000010);
   249  000B46  0E02               	movlw	2
   250  000B48  EC92  F004         	call	_Lcd_Chr_CP
   251                           
   252                           ;LCDAvanzado.c: 55: Lcd_Chr_CP(0b00000001);
   253  000B4C  0E01               	movlw	1
   254  000B4E  EC92  F004         	call	_Lcd_Chr_CP
   255                           
   256                           ;LCDAvanzado.c: 56: Lcd_Chr_CP(0b00000000);
   257  000B52  0E00               	movlw	0
   258  000B54  EC92  F004         	call	_Lcd_Chr_CP
   259                           
   260                           ;LCDAvanzado.c: 57: Lcd_Chr_CP(0b00000110);
   261  000B58  0E06               	movlw	6
   262  000B5A  EC92  F004         	call	_Lcd_Chr_CP
   263                           
   264                           ;LCDAvanzado.c: 58: Lcd_Chr_CP(0b00001001);
   265  000B5E  0E09               	movlw	9
   266  000B60  EC92  F004         	call	_Lcd_Chr_CP
   267                           
   268                           ;LCDAvanzado.c: 59: Lcd_Chr_CP(0b00010001);
   269  000B64  0E11               	movlw	17
   270  000B66  EC92  F004         	call	_Lcd_Chr_CP
   271                           
   272                           ;LCDAvanzado.c: 60: Lcd_Chr_CP(0b00000010);
   273  000B6A  0E02               	movlw	2
   274  000B6C  EC92  F004         	call	_Lcd_Chr_CP
   275                           
   276                           ;LCDAvanzado.c: 61: Lcd_Chr_CP(0b00000100);
   277  000B70  0E04               	movlw	4
   278  000B72  EC92  F004         	call	_Lcd_Chr_CP
   279                           
   280                           ;LCDAvanzado.c: 62: Lcd_Chr_CP(0b00001000);
   281  000B76  0E08               	movlw	8
   282  000B78  EC92  F004         	call	_Lcd_Chr_CP
   283                           
   284                           ;LCDAvanzado.c: 63: Lcd_Chr_CP(0b00010000);
   285  000B7C  0E10               	movlw	16
   286  000B7E  EC92  F004         	call	_Lcd_Chr_CP
   287                           
   288                           ;LCDAvanzado.c: 64: Lcd_Chr_CP(0b00000000);
   289  000B82  0E00               	movlw	0
   290  000B84  EC92  F004         	call	_Lcd_Chr_CP
   291                           
   292                           ;LCDAvanzado.c: 65: Lcd_Cmd(1);
   293  000B88  0E01               	movlw	1
   294  000B8A  EC0F  F005         	call	_Lcd_Cmd
   295  000B8E                     l1104:
   296                           
   297                           ;LCDAvanzado.c: 67: sprintf(buffer,"CGram ");
   298  000B8E  0E0B               	movlw	low main@buffer
   299  000B90  6E01               	movwf	sprintf@sp,c
   300  000B92  0E00               	movlw	high main@buffer
   301  000B94  6E02               	movwf	sprintf@sp+1,c
   302  000B96  0E01               	movlw	low STR_1
   303  000B98  6E03               	movwf	sprintf@f,c
   304  000B9A  0E08               	movlw	high STR_1
   305  000B9C  6E04               	movwf	sprintf@f+1,c
   306  000B9E  EC23  F006         	call	_sprintf	;wreg free
   307                           
   308                           ;LCDAvanzado.c: 68: Lcd_Out2(1,1,buffer);
   309  000BA2  0E01               	movlw	1
   310  000BA4  6E04               	movwf	Lcd_Out2@x,c
   311  000BA6  0E0B               	movlw	low main@buffer
   312  000BA8  6E05               	movwf	Lcd_Out2@buffer,c
   313  000BAA  0E00               	movlw	high main@buffer
   314  000BAC  6E06               	movwf	Lcd_Out2@buffer+1,c
   315  000BAE  0E01               	movlw	1
   316  000BB0  ECF2  F005         	call	_Lcd_Out2
   317                           
   318                           ;LCDAvanzado.c: 69: Lcd_Chr_CP(0b00100001);
   319  000BB4  0E21               	movlw	33
   320  000BB6  EC92  F004         	call	_Lcd_Chr_CP
   321                           
   322                           ;LCDAvanzado.c: 70: Lcd_Chr_CP(0);
   323  000BBA  0E00               	movlw	0
   324  000BBC  EC92  F004         	call	_Lcd_Chr_CP
   325                           
   326                           ;LCDAvanzado.c: 71: Lcd_Chr_CP(1);
   327  000BC0  0E01               	movlw	1
   328  000BC2  EC92  F004         	call	_Lcd_Chr_CP
   329                           
   330                           ;LCDAvanzado.c: 72: Lcd_Chr_CP(2);
   331  000BC6  0E02               	movlw	2
   332  000BC8  EC92  F004         	call	_Lcd_Chr_CP
   333                           
   334                           ;LCDAvanzado.c: 73: _delay((unsigned long)((1000)*(8000000/4000.0)));
   335  000BCC  0E0B               	movlw	11
   336  000BCE  6E0A               	movwf	(??_main+1)& (0+255),c
   337  000BD0  0E26               	movlw	38
   338  000BD2  6E09               	movwf	??_main& (0+255),c
   339  000BD4  0E5E               	movlw	94
   340  000BD6                     u627:
   341  000BD6  2EE8               	decfsz	wreg,f,c
   342  000BD8  D7FE               	bra	u627
   343  000BDA  2E09               	decfsz	??_main& (0+255),f,c
   344  000BDC  D7FC               	bra	u627
   345  000BDE  2E0A               	decfsz	(??_main+1)& (0+255),f,c
   346  000BE0  D7FA               	bra	u627
   347  000BE2  D7D5               	goto	l1104
   348  000BE4                     __end_of_main:
   349                           	opt stack 0
   350                           tblptru	equ	0xFF8
   351                           wreg	equ	0xFE8
   352                           
   353 ;; *************** function _sprintf *****************
   354 ;; Defined at:
   355 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;  sp              2    0[COMRAM] PTR unsigned char 
   358 ;;		 -> main@buffer(20), 
   359 ;;  f               2    2[COMRAM] PTR const unsigned char 
   360 ;;		 -> STR_1(7), 
   361 ;; Auto vars:     Size  Location     Type
   362 ;;  tmpval          4    0        struct .
   363 ;;  cp              3    0        PTR const unsigned char 
   364 ;;  ap              2    4[COMRAM] PTR void [1]
   365 ;;		 -> ?_sprintf(2), 
   366 ;;  len             2    0        unsigned int 
   367 ;;  val             2    0        unsigned int 
   368 ;;  c               1    6[COMRAM] char 
   369 ;;  flag            1    0        unsigned char 
   370 ;;  prec            1    0        char 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  2    0[COMRAM] int 
   373 ;; Registers used:
   374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   380 ;;      Params:         4       0       0       0       0       0       0       0       0
   381 ;;      Locals:         3       0       0       0       0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0       0       0       0       0
   383 ;;      Totals:         7       0       0       0       0       0       0       0       0
   384 ;;Total ram usage:        7 bytes
   385 ;; Hardware stack levels used:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text1
   394  000C46                     __ptext1:
   395                           	opt stack 0
   396  000C46                     _sprintf:
   397                           	opt stack 30
   398                           
   399                           ;doprnt.c: 494: va_list ap;
   400                           ;doprnt.c: 499: signed char c;
   401                           ;doprnt.c: 506: signed char prec;
   402                           ;doprnt.c: 508: unsigned char flag;
   403                           ;doprnt.c: 523: union {
   404                           ;doprnt.c: 524: unsigned long vd;
   405                           ;doprnt.c: 525: double integ;
   406                           ;doprnt.c: 526: } tmpval;
   407                           ;doprnt.c: 528: unsigned int val;
   408                           ;doprnt.c: 529: unsigned len;
   409                           ;doprnt.c: 530: const char * cp;
   410                           ;doprnt.c: 533: *ap = __va_start();
   411                           
   412                           ;incstack = 0
   413  000C46  0E05               	movlw	low (?_sprintf+4)
   414  000C48  6E05               	movwf	sprintf@ap,c
   415  000C4A  0E00               	movlw	high (?_sprintf+4)
   416  000C4C  6E06               	movwf	sprintf@ap+1,c
   417                           
   418                           ;doprnt.c: 536: while(c = *f++) {
   419  000C4E  D008               	goto	l1056
   420  000C50                     l1052:
   421                           
   422                           ;doprnt.c: 540: {
   423                           ;doprnt.c: 541: ((*sp++ = (c)));
   424  000C50  C001  FFD9         	movff	sprintf@sp,fsr2l
   425  000C54  C002  FFDA         	movff	sprintf@sp+1,fsr2h
   426  000C58  C007  FFDF         	movff	sprintf@c,indf2
   427  000C5C  4A01               	infsnz	sprintf@sp,f,c
   428  000C5E  2A02               	incf	sprintf@sp+1,f,c
   429  000C60                     l1056:
   430  000C60  C003  FFF6         	movff	sprintf@f,tblptrl
   431  000C64  C004  FFF7         	movff	sprintf@f+1,tblptrh
   432  000C68  4A03               	infsnz	sprintf@f,f,c
   433  000C6A  2A04               	incf	sprintf@f+1,f,c
   434  000C6C                     	if	0	;tblptru may be non-zero
   435  000C6C                     	endif
   436  000C6C                     	if	0	;tblptru may be non-zero
   437  000C6C                     	endif
   438  000C6C  0008               	tblrd		*
   439  000C6E  CFF5 F007          	movff	tablat,sprintf@c
   440  000C72  5007               	movf	sprintf@c,w,c
   441  000C74  A4D8               	btfss	status,2,c
   442  000C76  D7EC               	goto	l1052
   443                           
   444                           ;doprnt.c: 1469: }
   445                           ;doprnt.c: 1533: }
   446                           ;doprnt.c: 1538: *sp = 0;
   447  000C78  C001  FFD9         	movff	sprintf@sp,fsr2l
   448  000C7C  C002  FFDA         	movff	sprintf@sp+1,fsr2h
   449  000C80  0E00               	movlw	0
   450  000C82  6EDF               	movwf	indf2,c
   451  000C84  0012               	return	
   452  000C86                     __end_of_sprintf:
   453                           	opt stack 0
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           wreg	equ	0xFE8
   459                           indf2	equ	0xFDF
   460                           fsr2h	equ	0xFDA
   461                           fsr2l	equ	0xFD9
   462                           status	equ	0xFD8
   463                           
   464 ;; *************** function _Lcd_Out2 *****************
   465 ;; Defined at:
   466 ;;		line 116 in file "flex_lcd.h"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  y               1    wreg     unsigned char 
   469 ;;  x               1    3[COMRAM] unsigned char 
   470 ;;  buffer          2    4[COMRAM] PTR unsigned char 
   471 ;;		 -> main@buffer(20), 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  y               1    6[COMRAM] unsigned char 
   474 ;;  data            1    7[COMRAM] unsigned char 
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   484 ;;      Params:         3       0       0       0       0       0       0       0       0
   485 ;;      Locals:         2       0       0       0       0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0       0       0
   487 ;;      Totals:         5       0       0       0       0       0       0       0       0
   488 ;;Total ram usage:        5 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; Hardware stack levels required when called:    1
   491 ;; This function calls:
   492 ;;		_Lcd_Chr_CP
   493 ;;		_Lcd_Cmd
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text2
   500  000BE4                     __ptext2:
   501                           	opt stack 0
   502  000BE4                     _Lcd_Out2:
   503                           	opt stack 29
   504                           
   505                           ;incstack = 0
   506                           ;Lcd_Out2@y stored from wreg
   507  000BE4  6E07               	movwf	Lcd_Out2@y,c
   508                           
   509                           ;flex_lcd.h: 118: unsigned char data;
   510                           ;flex_lcd.h: 119: switch (y)
   511  000BE6  D00D               	goto	l1040
   512  000BE8                     l1030:
   513  000BE8  5004               	movf	Lcd_Out2@x,w,c
   514  000BEA  0F80               	addlw	128
   515  000BEC  D008               	goto	L3
   516  000BEE                     l1032:
   517  000BEE  5004               	movf	Lcd_Out2@x,w,c
   518  000BF0  0FC0               	addlw	192
   519  000BF2  D005               	goto	L3
   520  000BF4                     l1034:
   521  000BF4  5004               	movf	Lcd_Out2@x,w,c
   522  000BF6  0F94               	addlw	148
   523  000BF8  D002               	goto	L3
   524  000BFA                     l1036:
   525  000BFA  5004               	movf	Lcd_Out2@x,w,c
   526  000BFC  0FD4               	addlw	212
   527  000BFE                     L3:
   528  000BFE  6E08               	movwf	Lcd_Out2@data,c
   529                           
   530                           ;flex_lcd.h: 126: }
   531                           
   532                           ;flex_lcd.h: 125: default: break;
   533  000C00  D00D               	goto	l1042
   534  000C02                     l1040:
   535  000C02  5007               	movf	Lcd_Out2@y,w,c
   536                           
   537                           ; Switch size 1, requested type "space"
   538                           ; Number of cases is 4, Range of values is 1 to 4
   539                           ; switch strategies available:
   540                           ; Name         Instructions Cycles
   541                           ; simple_byte           13     7 (average)
   542                           ;	Chosen strategy is simple_byte
   543  000C04  0A01               	xorlw	1	; case 1
   544  000C06  B4D8               	btfsc	status,2,c
   545  000C08  D7EF               	goto	l1030
   546  000C0A  0A03               	xorlw	3	; case 2
   547  000C0C  B4D8               	btfsc	status,2,c
   548  000C0E  D7EF               	goto	l1032
   549  000C10  0A01               	xorlw	1	; case 3
   550  000C12  B4D8               	btfsc	status,2,c
   551  000C14  D7EF               	goto	l1034
   552  000C16  0A07               	xorlw	7	; case 4
   553  000C18  B4D8               	btfsc	status,2,c
   554  000C1A  D7EF               	goto	l1036
   555  000C1C                     l1042:
   556                           
   557                           ;flex_lcd.h: 127: Lcd_Cmd(data);
   558  000C1C  5008               	movf	Lcd_Out2@data,w,c
   559  000C1E  EC0F  F005         	call	_Lcd_Cmd
   560                           
   561                           ;flex_lcd.h: 128: while(*buffer)
   562  000C22  D009               	goto	l1048
   563  000C24                     l1044:
   564                           
   565                           ;flex_lcd.h: 129: {
   566                           ;flex_lcd.h: 130: Lcd_Chr_CP(*buffer);
   567  000C24  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
   568  000C28  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
   569  000C2C  50DF               	movf	indf2,w,c
   570  000C2E  EC92  F004         	call	_Lcd_Chr_CP
   571                           
   572                           ;flex_lcd.h: 131: buffer++;
   573  000C32  4A05               	infsnz	Lcd_Out2@buffer,f,c
   574  000C34  2A06               	incf	Lcd_Out2@buffer+1,f,c
   575  000C36                     l1048:
   576  000C36  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
   577  000C3A  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
   578  000C3E  50DF               	movf	indf2,w,c
   579  000C40  B4D8               	btfsc	status,2,c
   580  000C42  0012               	return	
   581  000C44  D7EF               	goto	l1044
   582  000C46                     __end_of_Lcd_Out2:
   583                           	opt stack 0
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           wreg	equ	0xFE8
   589                           indf2	equ	0xFDF
   590                           fsr2h	equ	0xFDA
   591                           fsr2l	equ	0xFD9
   592                           status	equ	0xFD8
   593                           
   594 ;; *************** function _Lcd_Chr_CP *****************
   595 ;; Defined at:
   596 ;;		line 137 in file "flex_lcd.h"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  data            1    wreg     unsigned char 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  data            1    2[COMRAM] unsigned char 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   610 ;;      Params:         0       0       0       0       0       0       0       0       0
   611 ;;      Locals:         1       0       0       0       0       0       0       0       0
   612 ;;      Temps:          2       0       0       0       0       0       0       0       0
   613 ;;      Totals:         3       0       0       0       0       0       0       0       0
   614 ;;Total ram usage:        3 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_Lcd_Out2
   620 ;;		_main
   621 ;;		_Lcd_Out
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text3
   626  000924                     __ptext3:
   627                           	opt stack 0
   628  000924                     _Lcd_Chr_CP:
   629                           	opt stack 29
   630                           
   631                           ;incstack = 0
   632                           ;Lcd_Chr_CP@data stored from wreg
   633  000924  6E03               	movwf	Lcd_Chr_CP@data,c
   634                           
   635                           ;flex_lcd.h: 138: RD3 = 0; RD2 = 1;
   636  000926  9683               	bcf	3971,3,c	;volatile
   637  000928  8483               	bsf	3971,2,c	;volatile
   638                           
   639                           ;flex_lcd.h: 139: RD7 = (data & 0b10000000)>>7; RD6 = (data & 0b01000000)>>6;
   640  00092A  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
   641  00092C  AE03               	btfss	Lcd_Chr_CP@data,7,c
   642  00092E  D001               	bra	u205
   643  000930  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
   644  000932                     u205:
   645  000932  3001               	rrcf	??_Lcd_Chr_CP,w,c
   646  000934  A0D8               	btfss	status,0,c
   647  000936  D002               	goto	u210
   648  000938  8E83               	bsf	3971,7,c	;volatile
   649  00093A  D001               	goto	u225
   650  00093C                     u210:
   651  00093C  9E83               	bcf	3971,7,c	;volatile
   652  00093E                     u225:
   653  00093E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   654  000942  0E06               	movlw	6
   655  000944  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
   656  000946                     u235:
   657  000946  90D8               	bcf	status,0,c
   658  000948  3201               	rrcf	??_Lcd_Chr_CP,f,c
   659  00094A  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
   660  00094C  D7FC               	goto	u235
   661  00094E  3001               	rrcf	??_Lcd_Chr_CP,w,c
   662  000950  A0D8               	btfss	status,0,c
   663  000952  D002               	goto	u240
   664  000954  8C83               	bsf	3971,6,c	;volatile
   665  000956  D001               	goto	u255
   666  000958                     u240:
   667  000958  9C83               	bcf	3971,6,c	;volatile
   668  00095A                     u255:
   669                           
   670                           ;flex_lcd.h: 140: RD5 = (data & 0b00100000)>>5; RD4 = (data & 0b00010000)>>4;
   671  00095A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   672  00095E  0E05               	movlw	5
   673  000960  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
   674  000962                     u265:
   675  000962  90D8               	bcf	status,0,c
   676  000964  3201               	rrcf	??_Lcd_Chr_CP,f,c
   677  000966  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
   678  000968  D7FC               	goto	u265
   679  00096A  3001               	rrcf	??_Lcd_Chr_CP,w,c
   680  00096C  A0D8               	btfss	status,0,c
   681  00096E  D002               	goto	u270
   682  000970  8A83               	bsf	3971,5,c	;volatile
   683  000972  D001               	goto	u285
   684  000974                     u270:
   685  000974  9A83               	bcf	3971,5,c	;volatile
   686  000976                     u285:
   687  000976  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   688  00097A  3A01               	swapf	??_Lcd_Chr_CP,f,c
   689  00097C  0E0F               	movlw	15
   690  00097E  1601               	andwf	??_Lcd_Chr_CP,f,c
   691  000980  3001               	rrcf	??_Lcd_Chr_CP,w,c
   692  000982  A0D8               	btfss	status,0,c
   693  000984  D002               	goto	u290
   694  000986  8883               	bsf	3971,4,c	;volatile
   695  000988  D001               	goto	l770
   696  00098A                     u290:
   697  00098A  9883               	bcf	3971,4,c	;volatile
   698  00098C                     l770:
   699                           
   700                           ;flex_lcd.h: 141: _delay(10);
   701  00098C  0E03               	movlw	3
   702  00098E                     u637:
   703  00098E  2EE8               	decfsz	wreg,f,c
   704  000990  D7FE               	bra	u637
   705  000992  F000               	nop	
   706                           
   707                           ;flex_lcd.h: 142: RD3 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); RD3 = 0;
   708  000994  8683               	bsf	3971,3,c	;volatile
   709  000996  0E03               	movlw	3
   710  000998                     u647:
   711  000998  2EE8               	decfsz	wreg,f,c
   712  00099A  D7FE               	bra	u647
   713  00099C  F000               	nop	
   714  00099E  9683               	bcf	3971,3,c	;volatile
   715                           
   716                           ;flex_lcd.h: 143: RD7 = (data & 0b00001000)>>3; RD6 = (data & 0b00000100)>>2;
   717  0009A0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   718  0009A4  90D8               	bcf	status,0,c
   719  0009A6  3201               	rrcf	??_Lcd_Chr_CP,f,c
   720  0009A8  90D8               	bcf	status,0,c
   721  0009AA  3201               	rrcf	??_Lcd_Chr_CP,f,c
   722  0009AC  90D8               	bcf	status,0,c
   723  0009AE  3201               	rrcf	??_Lcd_Chr_CP,f,c
   724  0009B0  3001               	rrcf	??_Lcd_Chr_CP,w,c
   725  0009B2  A0D8               	btfss	status,0,c
   726  0009B4  D002               	goto	u310
   727  0009B6  8E83               	bsf	3971,7,c	;volatile
   728  0009B8  D001               	goto	u325
   729  0009BA                     u310:
   730  0009BA  9E83               	bcf	3971,7,c	;volatile
   731  0009BC                     u325:
   732  0009BC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   733  0009C0  90D8               	bcf	status,0,c
   734  0009C2  3201               	rrcf	??_Lcd_Chr_CP,f,c
   735  0009C4  90D8               	bcf	status,0,c
   736  0009C6  3201               	rrcf	??_Lcd_Chr_CP,f,c
   737  0009C8  3001               	rrcf	??_Lcd_Chr_CP,w,c
   738  0009CA  A0D8               	btfss	status,0,c
   739  0009CC  D002               	goto	u330
   740  0009CE  8C83               	bsf	3971,6,c	;volatile
   741  0009D0  D001               	goto	u345
   742  0009D2                     u330:
   743  0009D2  9C83               	bcf	3971,6,c	;volatile
   744  0009D4                     u345:
   745                           
   746                           ;flex_lcd.h: 144: RD5 = (data & 0b00000010)>>1; RD4 = (data & 0b00000001);
   747  0009D4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   748  0009D8  90D8               	bcf	status,0,c
   749  0009DA  3201               	rrcf	??_Lcd_Chr_CP,f,c
   750  0009DC  3001               	rrcf	??_Lcd_Chr_CP,w,c
   751  0009DE  A0D8               	btfss	status,0,c
   752  0009E0  D002               	goto	u350
   753  0009E2  8A83               	bsf	3971,5,c	;volatile
   754  0009E4  D001               	goto	l778
   755  0009E6                     u350:
   756  0009E6  9A83               	bcf	3971,5,c	;volatile
   757  0009E8                     l778:
   758  0009E8  A003               	btfss	Lcd_Chr_CP@data,0,c
   759  0009EA  D002               	goto	u370
   760  0009EC  8883               	bsf	3971,4,c	;volatile
   761  0009EE  D001               	goto	l780
   762  0009F0                     u370:
   763  0009F0  9883               	bcf	3971,4,c	;volatile
   764  0009F2                     l780:
   765                           
   766                           ;flex_lcd.h: 145: _delay(10);
   767  0009F2  0E03               	movlw	3
   768  0009F4                     u657:
   769  0009F4  2EE8               	decfsz	wreg,f,c
   770  0009F6  D7FE               	bra	u657
   771  0009F8  F000               	nop	
   772                           
   773                           ;flex_lcd.h: 146: RD3 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); RD3 = 0;
   774  0009FA  8683               	bsf	3971,3,c	;volatile
   775  0009FC  0E03               	movlw	3
   776  0009FE                     u667:
   777  0009FE  2EE8               	decfsz	wreg,f,c
   778  000A00  D7FE               	bra	u667
   779  000A02  F000               	nop	
   780  000A04  9683               	bcf	3971,3,c	;volatile
   781                           
   782                           ;flex_lcd.h: 147: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned lon
      +                          g)((5500)*(8000000/4000000.0)));
   783  000A06  0E03               	movlw	3
   784  000A08                     u677:
   785  000A08  2EE8               	decfsz	wreg,f,c
   786  000A0A  D7FE               	bra	u677
   787  000A0C  F000               	nop	
   788  000A0E  0E0F               	movlw	15
   789  000A10  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
   790  000A12  0E48               	movlw	72
   791  000A14                     u687:
   792  000A14  2EE8               	decfsz	wreg,f,c
   793  000A16  D7FE               	bra	u687
   794  000A18  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
   795  000A1A  D7FC               	bra	u687
   796  000A1C  0012               	return		;funcret
   797  000A1E                     __end_of_Lcd_Chr_CP:
   798                           	opt stack 0
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           wreg	equ	0xFE8
   804                           indf2	equ	0xFDF
   805                           fsr2h	equ	0xFDA
   806                           fsr2l	equ	0xFD9
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function _Lcd_Init *****************
   810 ;; Defined at:
   811 ;;		line 53 in file "flex_lcd.h"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  data            1    4[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         0       0       0       0       0       0       0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0       0       0
   827 ;;      Temps:          1       0       0       0       0       0       0       0       0
   828 ;;      Totals:         2       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        2 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    1
   832 ;; This function calls:
   833 ;;		_Lcd_Cmd
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840  00080A                     __ptext4:
   841                           	opt stack 0
   842  00080A                     _Lcd_Init:
   843                           	opt stack 29
   844                           
   845                           ;flex_lcd.h: 54: unsigned char data;
   846                           ;flex_lcd.h: 55: TRISD7 = 0;
   847                           
   848                           ;incstack = 0
   849  00080A  9E95               	bcf	3989,7,c	;volatile
   850                           
   851                           ;flex_lcd.h: 56: TRISD6 = 0;
   852  00080C  9C95               	bcf	3989,6,c	;volatile
   853                           
   854                           ;flex_lcd.h: 57: TRISD5 = 0;
   855  00080E  9A95               	bcf	3989,5,c	;volatile
   856                           
   857                           ;flex_lcd.h: 58: TRISD4 = 0;
   858  000810  9895               	bcf	3989,4,c	;volatile
   859                           
   860                           ;flex_lcd.h: 59: TRISD3 = 0;
   861  000812  9695               	bcf	3989,3,c	;volatile
   862                           
   863                           ;flex_lcd.h: 60: TRISD2 = 0;
   864  000814  9495               	bcf	3989,2,c	;volatile
   865                           
   866                           ;flex_lcd.h: 61: RD7 = 0;
   867  000816  9E83               	bcf	3971,7,c	;volatile
   868                           
   869                           ;flex_lcd.h: 62: RD6 = 0;
   870  000818  9C83               	bcf	3971,6,c	;volatile
   871                           
   872                           ;flex_lcd.h: 63: RD5 = 0;
   873  00081A  9A83               	bcf	3971,5,c	;volatile
   874                           
   875                           ;flex_lcd.h: 64: RD4 = 0;
   876  00081C  9883               	bcf	3971,4,c	;volatile
   877                           
   878                           ;flex_lcd.h: 65: RD3 = 0;
   879  00081E  9683               	bcf	3971,3,c	;volatile
   880                           
   881                           ;flex_lcd.h: 66: RD2 = 0;
   882  000820  9483               	bcf	3971,2,c	;volatile
   883                           
   884                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   885  000822  0E0F               	movlw	15
   886  000824  6E04               	movwf	??_Lcd_Init& (0+255),c
   887  000826  0E48               	movlw	72
   888  000828                     u697:
   889  000828  2EE8               	decfsz	wreg,f,c
   890  00082A  D7FE               	bra	u697
   891  00082C  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   892  00082E  D7FC               	bra	u697
   893                           
   894                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   895  000830  0E0F               	movlw	15
   896  000832  6E04               	movwf	??_Lcd_Init& (0+255),c
   897  000834  0E48               	movlw	72
   898  000836                     u707:
   899  000836  2EE8               	decfsz	wreg,f,c
   900  000838  D7FE               	bra	u707
   901  00083A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   902  00083C  D7FC               	bra	u707
   903                           
   904                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   905  00083E  0E0F               	movlw	15
   906  000840  6E04               	movwf	??_Lcd_Init& (0+255),c
   907  000842  0E48               	movlw	72
   908  000844                     u717:
   909  000844  2EE8               	decfsz	wreg,f,c
   910  000846  D7FE               	bra	u717
   911  000848  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   912  00084A  D7FC               	bra	u717
   913                           
   914                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   915  00084C  0E0F               	movlw	15
   916  00084E  6E04               	movwf	??_Lcd_Init& (0+255),c
   917  000850  0E48               	movlw	72
   918  000852                     u727:
   919  000852  2EE8               	decfsz	wreg,f,c
   920  000854  D7FE               	bra	u727
   921  000856  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   922  000858  D7FC               	bra	u727
   923                           
   924                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   925  00085A  0E0F               	movlw	15
   926  00085C  6E04               	movwf	??_Lcd_Init& (0+255),c
   927  00085E  0E48               	movlw	72
   928  000860                     u737:
   929  000860  2EE8               	decfsz	wreg,f,c
   930  000862  D7FE               	bra	u737
   931  000864  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   932  000866  D7FC               	bra	u737
   933                           
   934                           ;flex_lcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   935  000868  0E0F               	movlw	15
   936  00086A  6E04               	movwf	??_Lcd_Init& (0+255),c
   937  00086C  0E48               	movlw	72
   938  00086E                     u747:
   939  00086E  2EE8               	decfsz	wreg,f,c
   940  000870  D7FE               	bra	u747
   941  000872  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   942  000874  D7FC               	bra	u747
   943                           
   944                           ;flex_lcd.h: 73: for(data = 1; data < 4; data ++)
   945  000876  0E01               	movlw	1
   946  000878  6E05               	movwf	Lcd_Init@data,c
   947  00087A                     l798:
   948  00087A  0E03               	movlw	3
   949  00087C  6405               	cpfsgt	Lcd_Init@data,c
   950  00087E  D001               	goto	l51
   951  000880  D01F               	goto	l52
   952  000882                     l51:
   953                           
   954                           ;flex_lcd.h: 74: {
   955                           ;flex_lcd.h: 75: RD7 = 0; RD6 = 0; RD5 = 1; RD4 = 1; RD3 = 0;
   956  000882  9E83               	bcf	3971,7,c	;volatile
   957  000884  9C83               	bcf	3971,6,c	;volatile
   958  000886  8A83               	bsf	3971,5,c	;volatile
   959  000888  8883               	bsf	3971,4,c	;volatile
   960  00088A  9683               	bcf	3971,3,c	;volatile
   961                           
   962                           ;flex_lcd.h: 76: RD2 = 0; RD7 = 0; RD6 = 0; RD5 = 1; RD4 = 1;
   963  00088C  9483               	bcf	3971,2,c	;volatile
   964  00088E  9E83               	bcf	3971,7,c	;volatile
   965  000890  9C83               	bcf	3971,6,c	;volatile
   966  000892  8A83               	bsf	3971,5,c	;volatile
   967  000894  8883               	bsf	3971,4,c	;volatile
   968                           
   969                           ;flex_lcd.h: 77: RD3 = 1; RD2 = 0;
   970  000896  8683               	bsf	3971,3,c	;volatile
   971  000898  9483               	bcf	3971,2,c	;volatile
   972                           
   973                           ;flex_lcd.h: 78: _delay((unsigned long)((5)*(8000000/4000000.0)));
   974  00089A  0E03               	movlw	3
   975  00089C                     u757:
   976  00089C  2EE8               	decfsz	wreg,f,c
   977  00089E  D7FE               	bra	u757
   978  0008A0  F000               	nop	
   979                           
   980                           ;flex_lcd.h: 79: RD7 = 0; RD6 = 0; RD5 = 1; RD4 = 1; RD3 = 0;
   981  0008A2  9E83               	bcf	3971,7,c	;volatile
   982  0008A4  9C83               	bcf	3971,6,c	;volatile
   983  0008A6  8A83               	bsf	3971,5,c	;volatile
   984  0008A8  8883               	bsf	3971,4,c	;volatile
   985  0008AA  9683               	bcf	3971,3,c	;volatile
   986                           
   987                           ;flex_lcd.h: 80: RD2 = 0;
   988  0008AC  9483               	bcf	3971,2,c	;volatile
   989                           
   990                           ;flex_lcd.h: 81: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   991  0008AE  0E0F               	movlw	15
   992  0008B0  6E04               	movwf	??_Lcd_Init& (0+255),c
   993  0008B2  0E48               	movlw	72
   994  0008B4                     u767:
   995  0008B4  2EE8               	decfsz	wreg,f,c
   996  0008B6  D7FE               	bra	u767
   997  0008B8  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   998  0008BA  D7FC               	bra	u767
   999  0008BC  2A05               	incf	Lcd_Init@data,f,c
  1000  0008BE  D7DD               	goto	l798
  1001  0008C0                     l52:
  1002                           
  1003                           ;flex_lcd.h: 82: }
  1004                           ;flex_lcd.h: 83: RD7 = 0; RD6 = 0; RD5 = 1; RD4 = 0; RD3 = 0; RD2 = 0;
  1005  0008C0  9E83               	bcf	3971,7,c	;volatile
  1006  0008C2  9C83               	bcf	3971,6,c	;volatile
  1007  0008C4  8A83               	bsf	3971,5,c	;volatile
  1008  0008C6  9883               	bcf	3971,4,c	;volatile
  1009  0008C8  9683               	bcf	3971,3,c	;volatile
  1010  0008CA  9483               	bcf	3971,2,c	;volatile
  1011                           
  1012                           ;flex_lcd.h: 84: RD7 = 0; RD6 = 0; RD5 = 1; RD4 = 0; RD3 = 1; RD2 = 0;
  1013  0008CC  9E83               	bcf	3971,7,c	;volatile
  1014  0008CE  9C83               	bcf	3971,6,c	;volatile
  1015  0008D0  8A83               	bsf	3971,5,c	;volatile
  1016  0008D2  9883               	bcf	3971,4,c	;volatile
  1017  0008D4  8683               	bsf	3971,3,c	;volatile
  1018  0008D6  9483               	bcf	3971,2,c	;volatile
  1019                           
  1020                           ;flex_lcd.h: 85: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1021  0008D8  0E03               	movlw	3
  1022  0008DA                     u777:
  1023  0008DA  2EE8               	decfsz	wreg,f,c
  1024  0008DC  D7FE               	bra	u777
  1025  0008DE  F000               	nop	
  1026                           
  1027                           ;flex_lcd.h: 86: RD7 = 0; RD6 = 0; RD5 = 1; RD4 = 0; RD3 = 0; RD2 = 0;
  1028  0008E0  9E83               	bcf	3971,7,c	;volatile
  1029  0008E2  9C83               	bcf	3971,6,c	;volatile
  1030  0008E4  8A83               	bsf	3971,5,c	;volatile
  1031  0008E6  9883               	bcf	3971,4,c	;volatile
  1032  0008E8  9683               	bcf	3971,3,c	;volatile
  1033  0008EA  9483               	bcf	3971,2,c	;volatile
  1034                           
  1035                           ;flex_lcd.h: 87: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1036  0008EC  0E0F               	movlw	15
  1037  0008EE  6E04               	movwf	??_Lcd_Init& (0+255),c
  1038  0008F0  0E48               	movlw	72
  1039  0008F2                     u787:
  1040  0008F2  2EE8               	decfsz	wreg,f,c
  1041  0008F4  D7FE               	bra	u787
  1042  0008F6  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  1043  0008F8  D7FC               	bra	u787
  1044                           
  1045                           ;flex_lcd.h: 88: data = 40; Lcd_Cmd(data);
  1046  0008FA  0E28               	movlw	40
  1047  0008FC  6E05               	movwf	Lcd_Init@data,c
  1048  0008FE  5005               	movf	Lcd_Init@data,w,c
  1049  000900  EC0F  F005         	call	_Lcd_Cmd
  1050                           
  1051                           ;flex_lcd.h: 89: data = 16; Lcd_Cmd(data);
  1052  000904  0E10               	movlw	16
  1053  000906  6E05               	movwf	Lcd_Init@data,c
  1054  000908  5005               	movf	Lcd_Init@data,w,c
  1055  00090A  EC0F  F005         	call	_Lcd_Cmd
  1056                           
  1057                           ;flex_lcd.h: 90: data = 1; Lcd_Cmd(data);
  1058  00090E  0E01               	movlw	1
  1059  000910  6E05               	movwf	Lcd_Init@data,c
  1060  000912  5005               	movf	Lcd_Init@data,w,c
  1061  000914  EC0F  F005         	call	_Lcd_Cmd
  1062                           
  1063                           ;flex_lcd.h: 91: data = 15; Lcd_Cmd(data);
  1064  000918  0E0F               	movlw	15
  1065  00091A  6E05               	movwf	Lcd_Init@data,c
  1066  00091C  5005               	movf	Lcd_Init@data,w,c
  1067  00091E  EC0F  F005         	call	_Lcd_Cmd
  1068  000922  0012               	return		;funcret
  1069  000924                     __end_of_Lcd_Init:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           wreg	equ	0xFE8
  1076                           indf2	equ	0xFDF
  1077                           fsr2h	equ	0xFDA
  1078                           fsr2l	equ	0xFD9
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function _Lcd_Cmd *****************
  1082 ;; Defined at:
  1083 ;;		line 151 in file "flex_lcd.h"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  data            1    wreg     unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  data            1    2[COMRAM] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1097 ;;      Params:         0       0       0       0       0       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1099 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1100 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1101 ;;Total ram usage:        3 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_Lcd_Init
  1107 ;;		_Lcd_Out2
  1108 ;;		_main
  1109 ;;		_Lcd_Out
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text5
  1114  000A1E                     __ptext5:
  1115                           	opt stack 0
  1116  000A1E                     _Lcd_Cmd:
  1117                           	opt stack 29
  1118                           
  1119                           ;incstack = 0
  1120                           ;Lcd_Cmd@data stored from wreg
  1121  000A1E  6E03               	movwf	Lcd_Cmd@data,c
  1122                           
  1123                           ;flex_lcd.h: 152: RD3 = 0; RD2 = 0;
  1124  000A20  9683               	bcf	3971,3,c	;volatile
  1125  000A22  9483               	bcf	3971,2,c	;volatile
  1126                           
  1127                           ;flex_lcd.h: 153: RD7 = (data & 0b10000000)>>7; RD6 = (data & 0b01000000)>>6;
  1128  000A24  6A01               	clrf	??_Lcd_Cmd& (0+255),c
  1129  000A26  AE03               	btfss	Lcd_Cmd@data,7,c
  1130  000A28  D001               	bra	u15
  1131  000A2A  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
  1132  000A2C                     u15:
  1133  000A2C  3001               	rrcf	??_Lcd_Cmd,w,c
  1134  000A2E  A0D8               	btfss	status,0,c
  1135  000A30  D002               	goto	u20
  1136  000A32  8E83               	bsf	3971,7,c	;volatile
  1137  000A34  D001               	goto	u35
  1138  000A36                     u20:
  1139  000A36  9E83               	bcf	3971,7,c	;volatile
  1140  000A38                     u35:
  1141  000A38  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1142  000A3C  0E06               	movlw	6
  1143  000A3E  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1144  000A40                     u45:
  1145  000A40  90D8               	bcf	status,0,c
  1146  000A42  3201               	rrcf	??_Lcd_Cmd,f,c
  1147  000A44  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1148  000A46  D7FC               	goto	u45
  1149  000A48  3001               	rrcf	??_Lcd_Cmd,w,c
  1150  000A4A  A0D8               	btfss	status,0,c
  1151  000A4C  D002               	goto	u50
  1152  000A4E  8C83               	bsf	3971,6,c	;volatile
  1153  000A50  D001               	goto	u65
  1154  000A52                     u50:
  1155  000A52  9C83               	bcf	3971,6,c	;volatile
  1156  000A54                     u65:
  1157                           
  1158                           ;flex_lcd.h: 154: RD5 = (data & 0b00100000)>>5; RD4 = (data & 0b00010000)>>4;
  1159  000A54  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1160  000A58  0E05               	movlw	5
  1161  000A5A  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  1162  000A5C                     u75:
  1163  000A5C  90D8               	bcf	status,0,c
  1164  000A5E  3201               	rrcf	??_Lcd_Cmd,f,c
  1165  000A60  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  1166  000A62  D7FC               	goto	u75
  1167  000A64  3001               	rrcf	??_Lcd_Cmd,w,c
  1168  000A66  A0D8               	btfss	status,0,c
  1169  000A68  D002               	goto	u80
  1170  000A6A  8A83               	bsf	3971,5,c	;volatile
  1171  000A6C  D001               	goto	u95
  1172  000A6E                     u80:
  1173  000A6E  9A83               	bcf	3971,5,c	;volatile
  1174  000A70                     u95:
  1175  000A70  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1176  000A74  3A01               	swapf	??_Lcd_Cmd,f,c
  1177  000A76  0E0F               	movlw	15
  1178  000A78  1601               	andwf	??_Lcd_Cmd,f,c
  1179  000A7A  3001               	rrcf	??_Lcd_Cmd,w,c
  1180  000A7C  A0D8               	btfss	status,0,c
  1181  000A7E  D002               	goto	u100
  1182  000A80  8883               	bsf	3971,4,c	;volatile
  1183  000A82  D001               	goto	l746
  1184  000A84                     u100:
  1185  000A84  9883               	bcf	3971,4,c	;volatile
  1186  000A86                     l746:
  1187                           
  1188                           ;flex_lcd.h: 155: _delay(10);
  1189  000A86  0E03               	movlw	3
  1190  000A88                     u797:
  1191  000A88  2EE8               	decfsz	wreg,f,c
  1192  000A8A  D7FE               	bra	u797
  1193  000A8C  F000               	nop	
  1194                           
  1195                           ;flex_lcd.h: 156: RD3 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); RD3 = 0;
  1196  000A8E  8683               	bsf	3971,3,c	;volatile
  1197  000A90  0E03               	movlw	3
  1198  000A92                     u807:
  1199  000A92  2EE8               	decfsz	wreg,f,c
  1200  000A94  D7FE               	bra	u807
  1201  000A96  F000               	nop	
  1202  000A98  9683               	bcf	3971,3,c	;volatile
  1203                           
  1204                           ;flex_lcd.h: 157: RD7 = (data & 0b00001000)>>3; RD6 = (data & 0b00000100)>>2;
  1205  000A9A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1206  000A9E  90D8               	bcf	status,0,c
  1207  000AA0  3201               	rrcf	??_Lcd_Cmd,f,c
  1208  000AA2  90D8               	bcf	status,0,c
  1209  000AA4  3201               	rrcf	??_Lcd_Cmd,f,c
  1210  000AA6  90D8               	bcf	status,0,c
  1211  000AA8  3201               	rrcf	??_Lcd_Cmd,f,c
  1212  000AAA  3001               	rrcf	??_Lcd_Cmd,w,c
  1213  000AAC  A0D8               	btfss	status,0,c
  1214  000AAE  D002               	goto	u120
  1215  000AB0  8E83               	bsf	3971,7,c	;volatile
  1216  000AB2  D001               	goto	u135
  1217  000AB4                     u120:
  1218  000AB4  9E83               	bcf	3971,7,c	;volatile
  1219  000AB6                     u135:
  1220  000AB6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1221  000ABA  90D8               	bcf	status,0,c
  1222  000ABC  3201               	rrcf	??_Lcd_Cmd,f,c
  1223  000ABE  90D8               	bcf	status,0,c
  1224  000AC0  3201               	rrcf	??_Lcd_Cmd,f,c
  1225  000AC2  3001               	rrcf	??_Lcd_Cmd,w,c
  1226  000AC4  A0D8               	btfss	status,0,c
  1227  000AC6  D002               	goto	u140
  1228  000AC8  8C83               	bsf	3971,6,c	;volatile
  1229  000ACA  D001               	goto	u155
  1230  000ACC                     u140:
  1231  000ACC  9C83               	bcf	3971,6,c	;volatile
  1232  000ACE                     u155:
  1233                           
  1234                           ;flex_lcd.h: 158: RD5 = (data & 0b00000010)>>1; RD4 = (data & 0b00000001);
  1235  000ACE  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1236  000AD2  90D8               	bcf	status,0,c
  1237  000AD4  3201               	rrcf	??_Lcd_Cmd,f,c
  1238  000AD6  3001               	rrcf	??_Lcd_Cmd,w,c
  1239  000AD8  A0D8               	btfss	status,0,c
  1240  000ADA  D002               	goto	u160
  1241  000ADC  8A83               	bsf	3971,5,c	;volatile
  1242  000ADE  D001               	goto	l754
  1243  000AE0                     u160:
  1244  000AE0  9A83               	bcf	3971,5,c	;volatile
  1245  000AE2                     l754:
  1246  000AE2  A003               	btfss	Lcd_Cmd@data,0,c
  1247  000AE4  D002               	goto	u180
  1248  000AE6  8883               	bsf	3971,4,c	;volatile
  1249  000AE8  D001               	goto	l756
  1250  000AEA                     u180:
  1251  000AEA  9883               	bcf	3971,4,c	;volatile
  1252  000AEC                     l756:
  1253                           
  1254                           ;flex_lcd.h: 159: _delay(10);
  1255  000AEC  0E03               	movlw	3
  1256  000AEE                     u817:
  1257  000AEE  2EE8               	decfsz	wreg,f,c
  1258  000AF0  D7FE               	bra	u817
  1259  000AF2  F000               	nop	
  1260                           
  1261                           ;flex_lcd.h: 160: RD3 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); RD3 = 0;
  1262  000AF4  8683               	bsf	3971,3,c	;volatile
  1263  000AF6  0E03               	movlw	3
  1264  000AF8                     u827:
  1265  000AF8  2EE8               	decfsz	wreg,f,c
  1266  000AFA  D7FE               	bra	u827
  1267  000AFC  F000               	nop	
  1268  000AFE  9683               	bcf	3971,3,c	;volatile
  1269                           
  1270                           ;flex_lcd.h: 161: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1271  000B00  0E0F               	movlw	15
  1272  000B02  6E01               	movwf	??_Lcd_Cmd& (0+255),c
  1273  000B04  0E48               	movlw	72
  1274  000B06                     u837:
  1275  000B06  2EE8               	decfsz	wreg,f,c
  1276  000B08  D7FE               	bra	u837
  1277  000B0A  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
  1278  000B0C  D7FC               	bra	u837
  1279  000B0E  0012               	return		;funcret
  1280  000B10                     __end_of_Lcd_Cmd:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           wreg	equ	0xFE8
  1287                           indf2	equ	0xFDF
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           tblptrl	equ	0xFF6
  1294                           tablat	equ	0xFF5
  1295                           wreg	equ	0xFE8
  1296                           indf2	equ	0xFDF
  1297                           fsr2h	equ	0xFDA
  1298                           fsr2l	equ	0xFD9
  1299                           status	equ	0xFD8
  1300                           
  1301                           	psect	rparam
  1302  0000                     tblptru	equ	0xFF8
  1303                           tblptrh	equ	0xFF7
  1304                           tblptrl	equ	0xFF6
  1305                           tablat	equ	0xFF5
  1306                           wreg	equ	0xFE8
  1307                           indf2	equ	0xFDF
  1308                           fsr2h	equ	0xFDA
  1309                           fsr2l	equ	0xFD9
  1310                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out2
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    1316
                                              8 COMRAM    22    22      0
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4     243
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3     573
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Chr_CP
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1E      1E       1       31.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Oct 07 03:17:31 2017

                     l51 0882                       l52 08C0                       u20 0A36  
                     u15 0A2C                       u50 0A52                       u35 0A38  
                     u45 0A40                       u80 0A6E                       u65 0A54  
                     u75 0A5C                       u95 0A70              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l754 0AE2                      l746 0A86                      l770 098C  
                    l756 0AEC                      l780 09F2                      l778 09E8  
                    l798 087A             __CFG_CPB$OFF 000000                      _RB4 007C0C  
                    _RB5 007C0D                      _RD2 007C1A                      _RB6 007C0E  
                    _RD3 007C1B                      _RB7 007C0F                      u100 0A84  
                    _RD4 007C1C                      _RD5 007C1D                      _RD6 007C1E  
                    _RD7 007C1F                      u120 0AB4                      u210 093C  
                    u140 0ACC                      u205 0932                      u310 09BA  
                    u135 0AB6                      u160 0AE0                      u240 0958  
                    u225 093E                      u330 09D2                      u155 0ACE  
                    u235 0946                      u180 0AEA                      u325 09BC  
                    u350 09E6                      u270 0974                      u255 095A  
                    u345 09D4                      u265 0962                      u370 09F0  
                    u290 098A             __CFG_CPD$OFF 000000                      u285 0976  
                    u707 0836                      u627 0BD6                      u717 0844  
                    u637 098E                      u807 0A92                      u727 0852  
                    u647 0998                      u817 0AEE                      u737 0860  
                    u657 09F4                      u827 0AF8                      u747 086E  
                    u667 09FE                      u837 0B06                      u757 089C  
                    u677 0A08                      u767 08B4                      u687 0A14  
                    u777 08DA                      u697 0828                      u787 08F2  
                    u797 0A88                      wreg 000FE8             __CFG_WDT$OFF 000000  
                   l1030 0BE8                     l1032 0BEE                     l1040 0C02  
                   l1104 0B8E                     l1034 0BF4                     l1042 0C1C  
                   l1044 0C24                     l1036 0BFA                     l1052 0C50  
                   l1048 0C36                     l1056 0C60                     STR_1 0801  
                   _main 0B10                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     start 0000            __CFG_IESO$OFF 000000  
        __end_of_Lcd_Cmd 0B10            __CFG_MCLRE$ON 000000             ___param_bank 000000  
             _Lcd_Chr_CP 0924           Lcd_Out2@buffer 0005            __CFG_PLLDIV$2 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISB 000F93            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 0C86           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
       __end_of_Lcd_Init 0924         __end_of_Lcd_Out2 0C46          __initialization 0C86  
           __end_of_main 0BE4                   ??_main 0009            __activetblptr 000002  
                 _ADCON1 000FC1                   _OSCCON 000FD3                ??_Lcd_Cmd 0001  
                 _TRISD2 007CAA                   _TRISD3 007CAB                   _TRISD4 007CAC  
                 _TRISD5 007CAD                   _TRISD6 007CAE                   _TRISD7 007CAF  
         __CFG_XINST$OFF 000000              ?_Lcd_Chr_CP 0001           __CFG_STVREN$ON 000000  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_sprintf 0005               __accesstop 0060  
__end_of__initialization 0C86            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_Lcd_Init 0001                ?_Lcd_Out2 0004      __size_of_Lcd_Chr_CP 00FA  
             ??_Lcd_Init 0004               ??_Lcd_Out2 0007          __CFG_VREGEN$OFF 000000  
                _Lcd_Cmd 0A1E                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0C86                  __ramtop 0800  
                __ptext0 0B10                  __ptext1 0C46                  __ptext2 0BE4  
                __ptext3 0924                  __ptext4 080A                  __ptext5 0A1E  
                _sprintf 0C46     end_of_initialization 0C86            __Lmediumconst 0000  
           ??_Lcd_Chr_CP 0001                Lcd_Out2@x 0004                Lcd_Out2@y 0007  
     __end_of_Lcd_Chr_CP 0A1E               main@buffer 000B      start_initialization 0C86  
      __size_of_Lcd_Init 011A        __size_of_Lcd_Out2 0062         __CFG_LPT1OSC$OFF 000000  
               ?_Lcd_Cmd 0001              __smallconst 0800                 ?_sprintf 0001  
       __CFG_WDTPS$32768 000000             Lcd_Init@data 0005             Lcd_Out2@data 0008  
               _Lcd_Init 080A                 _Lcd_Out2 0BE4         __size_of_Lcd_Cmd 00F2  
               __Hrparam 0000                 __Lrparam 0000           Lcd_Chr_CP@data 0003  
       __size_of_sprintf 0040              Lcd_Cmd@data 0003            __size_of_main 00D4  
  __CFG_CPUDIV$OSC1_PLL2 000000                sprintf@ap 0005                sprintf@sp 0001  
               sprintf@c 0007                 sprintf@f 0003      __CFG_FOSC$INTOSC_XT 000000  
